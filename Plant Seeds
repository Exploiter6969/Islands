do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v3(v1(v29,16));if v28 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v6(v82,v28);v28=nil;v111=1;end end else return v82;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v83=0 -0 ;local v84;while true do if ((229 -(199 + 30))==v83) then v84=(v31/((973 -(60 + 911))^(v32-(955 -(221 + 733)))))%((1 + 1)^(((v33-(1 -0)) -(v32-(2 -1))) + 1)) ;return v84-(v84%1) ;end end else local v85=0;local v86;while true do if (v85==(0 -(1479 -(1207 + 272)))) then v86=(3 -(1 -0))^(v32-(1 -0)) ;return (((v31%(v86 + v86))>=v86) and (1 -0)) or (0 -0) ;end end end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48=0 -0 ;local v49;local v50;while true do if ((1 + 0)==v48) then return (v50 * (245 + 11)) + v49 ;end if (v48==((367 -(227 + 140)) -0)) then v49,v50=v2(v25,v27,v27 + (3 -1) );v27=v27 + 2 ;v48=648 -(87 + 560) ;end end end local function v36()local v51=722 -((2165 -(1665 + 259)) + 481) ;local v52;local v53;local v54;local v55;while true do if (v51==(1 -0)) then return (v55 * (16777916 -(369 + 331))) + (v54 * 65536) + (v53 * (487 -(230 + 1))) + v52 ;end if (v51==(110 -(49 + 61))) then v52,v53,v54,v55=v2(v25,v27,v27 + (473 -(308 + 162)) );v27=v27 + (907 -(752 + 151)) ;v51=78 -(47 + 30) ;end end end local function v37()local v56=v36();local v57=v36();local v58=203 -(27 + (525 -350)) ;local v59=(v30(v57,1157 -((1455 -989) + 690) ,18 + 2 ) * ((191 -((466 -(28 + 291)) + 42))^(1895 -(536 + 1327)))) + v56 ;local v60=v30(v57,(3998 -2410) -(53 + 1514) ,31);local v61=((v30(v57,26 + 6 )==(1 + 0)) and  -1) or (1031 -(884 + 146)) ;if (v60==(0 -0)) then if (v59==(0 + 0)) then return v61 * (0 -0) ;else local v101=0 + 0 ;while true do if (v101==(568 -(320 + 248))) then v60=(1407 -(278 + 1128)) -0 ;v58=0 + 0 ;break;end end end elseif (v60==((2956 -(135 + 1610)) + 836)) then return ((v59==(0 + 0)) and (v61 * ((3 -2)/((399 -(157 + 242)) -0)))) or (v61 * NaN) ;end return v9(v61,v60-1023 ) * (v58 + (v59/((3 -1)^(2023 -(594 + 1377))))) ;end local function v38(v39)local v62=0;local v63;local v64;while true do if (v62==(0 + 0)) then v63=nil;if  not v39 then local v105=0 -0 ;while true do if (v105==(0 -(1467 -(125 + 1342)))) then v39=v36();if (v39==(1800 -((1821 -(568 + 360)) + 907))) then return "";end break;end end end v62=938 -(29 + (2779 -(1370 + 501))) ;end if ((882 -((1212 -(532 + 373)) + 574))==v62) then v63=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;v62=9 -7 ;end if (v62==((3189 -1857) -(643 + 687))) then v64={};for v102=1 + (1347 -(277 + 1070)) , #v63 do v64[v102]=v3(v2(v4(v63,v102,v102)));end v62=1 + 2 ;end if (v62==(1221 -(668 + 550))) then return v7(v64);end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0 + 0 ;local v66;local v67;local v68;local v69;local v70;local v71;while true do local v75=643 -(608 + 35) ;while true do if (v75==(1892 -(69 + 1822))) then if (v65==(1183 -(991 + 190))) then local v110=0 -0 ;while true do if ((0 -0)~=v110) then else for v116=1 + 0 ,v36() do local v117=0 -0 ;local v118;local v119;while true do if (v117==(1 + 0)) then while true do if (v118~=(0 -0)) then else v119=v34();if (v30(v119,1,1)==(0 -0)) then local v135=873 -(797 + 76) ;local v136;local v137;local v138;local v139;local v140;while true do if (v135~=(1 -0)) then else v138=nil;v139=nil;v135=5 -3 ;end if (v135==(418 -(363 + 55))) then v136=0 -0 ;v137=nil;v135=1;end if (v135~=(1 + 1)) then else v140=nil;while true do if (v136==2) then while true do if (v137==(4 -1)) then if (v30(v139,14 -11 ,8 -5 )~=(1 + 0)) then else v140[1730 -(1280 + 446) ]=v71[v140[1956 -(1253 + 699) ]];end v66[v116]=v140;break;end if ((1 + 0)~=v137) then else local v256=0 + 0 ;local v257;while true do if (v256==(0 + 0)) then v257=0;while true do if ((4 -3)~=v257) then else v137=741 -(202 + 537) ;break;end if (v257==(630 -(497 + 133))) then local v279=1299 -(234 + 1065) ;while true do if (v279==(1 + 0)) then v257=2 -1 ;break;end if (v279==(0 + 0)) then v140={v35(),v35(),nil,nil};if (v138==(0 -0)) then local v289=678 -(12 + 666) ;while true do if (v289==(0 -0)) then v140[248 -(72 + 173) ]=v35();v140[1 + 3 ]=v35();break;end end elseif (v138==(541 -(65 + 475))) then v140[7 -4 ]=v36();elseif (v138==(1146 -(1081 + 63))) then v140[963 -(743 + 217) ]=v36() -((96 -(90 + 4))^(12 + 4)) ;elseif (v138==(4 -1)) then local v300=0 + 0 ;local v301;local v302;while true do if (v300~=(0 -0)) then else v301=1189 -(135 + 1054) ;v302=nil;v300=4 -3 ;end if (v300~=1) then else while true do if (v301==0) then v302=0;while true do if (v302==(0 + 0)) then v140[8 -5 ]=v36() -(2^(73 -57)) ;v140[17 -13 ]=v35();break;end end break;end end break;end end end v279=1;end end end end break;end end end if (v137==2) then local v258=0 + 0 ;local v259;while true do if (v258==(0 + 0)) then v259=0 -0 ;while true do if (v259==1) then v137=1982 -(1069 + 910) ;break;end if (v259==(1465 -(1286 + 179))) then local v280=0;local v281;while true do if (v280~=0) then else v281=1263 -(840 + 423) ;while true do if (v281==1) then v259=1 + 0 ;break;end if (0==v281) then local v295=0 -0 ;while true do if (v295~=(1491 -(1060 + 431))) then else if (v30(v139,1 + 0 ,1 -0 )==(1710 -(1577 + 132))) then v140[1963 -(1553 + 408) ]=v71[v140[4 -2 ]];end if (v30(v139,1 + 1 ,453 -(259 + 192) )==(120 -(63 + 56))) then v140[5 -2 ]=v71[v140[1921 -(403 + 1515) ]];end v295=1 + 0 ;end if (v295~=(1 + 0)) then else v281=360 -(17 + 342) ;break;end end end end break;end end end end break;end end end if (v137==(0 + 0)) then local v260=1345 -(1272 + 73) ;local v261;while true do if (v260~=(0 -0)) then else v261=0 -0 ;while true do if (v261==1) then v137=1876 -(1246 + 629) ;break;end if (v261~=0) then else local v282=612 -(72 + 540) ;while true do if (v282==(0 + 0)) then v138=v30(v119,4 -2 ,5 -2 );v139=v30(v119,16 -12 ,3 + 3 );v282=1 + 0 ;end if ((1 + 0)~=v282) then else v261=4 -3 ;break;end end end end break;end end end end break;end if (v136==(1517 -(77 + 1439))) then v139=nil;v140=nil;v136=1 + 1 ;end if (v136~=0) then else local v232=0 -0 ;while true do if (v232==1) then v136=1569 -(508 + 1060) ;break;end if (v232==0) then v137=0 -0 ;v138=nil;v232=1;end end end end break;end end end break;end end break;end if (v117==(553 -(441 + 112))) then local v128=1580 -(352 + 1228) ;local v129;while true do if ((197 -(178 + 19))==v128) then v129=1584 -(1328 + 256) ;while true do if (v129~=(728 -(245 + 483))) then else v118=0;v119=nil;v129=1 + 0 ;end if (1==v129) then v117=369 -(337 + 31) ;break;end end break;end end end end end for v120=126 -(46 + 79) ,v36() do v67[v120-(1 + 0) ]=v42();end v110=1 -0 ;end if (v110~=(2 -1)) then else for v122=42 -(28 + 13) ,v36() do v68[v122]=v36();end return v69;end end end break;end if (v75==0) then local v104=0;while true do if (v104==(2 -1)) then v75=3 -2 ;break;end if (v104==(0 + 0)) then if (v65~=(2 -1)) then else local v113=234 -(233 + 1) ;while true do if (v113==1) then local v124=0;while true do if (v124==1) then v113=1 + 1 ;break;end if (v124==0) then for v131=1,v70 do local v132=0;local v133;local v134;while true do if (v132==0) then local v141=926 -(77 + 849) ;while true do if ((0 -0)~=v141) then else v133=v34();v134=nil;v141=1;end if (v141==(689 -(294 + 394))) then v132=1457 -(888 + 568) ;break;end end end if (1==v132) then if (v133==(1080 -(341 + 738))) then v134=v34()~=(1790 -(1699 + 91)) ;elseif (v133==2) then v134=v37();elseif (v133==(2 + 1)) then v134=v38();end v71[v131]=v134;break;end end end v69[11 -8 ]=v34();v124=1 + 0 ;end end end if (v113==0) then local v125=0 -0 ;while true do if (v125==0) then v70=v36();v71={};v125=1 + 0 ;end if ((1 -0)~=v125) then else v113=3 -2 ;break;end end end if (v113==(1137 -(838 + 297))) then v65=1 + 1 ;break;end end end if ((0 + 0)==v65) then local v114=0;while true do if (v114~=2) then else v65=2 -1 ;break;end if (v114==(1 + 0)) then v68={};v69={v66,v67,nil,v68};v114=748 -(42 + 704) ;end if (v114==(0 -0)) then v66={};v67={};v114=2 -1 ;end end end v104=1 + 0 ;end end end end end end local function v43(v44,v45,v46)local v72=v44[1];local v73=v44[2];local v74=v44[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v13("#",...) -1 ;local function v80()local v87=v72;local v88=v73;local v89=v74;local v90=v41;local v91={};local v92={};local v93={};for v97=999 -(237 + 762) ,v79 do if (((3551 -2349)<(12012 -7262)) and (v97>=v89)) then v91[v97-v89 ]=v78[v97 + 1 ];else v93[v97]=v78[v97 + ((691 + 0) -(244 + 446)) ];end end local v94=(v79-v89) + (1 -0) ;local v95;local v96;while true do local v98=367 -(18 + 42 + 307) ;local v99;while true do if ((3801>=(1491 -(36 + 291))) and (v98==0)) then v99=0 + 0 ;while true do if ((v99==(0 + 0)) or (1248==351)) then local v115=0 + 0 ;while true do if (((2346 -(91 + (884 -588)))>(1542 -(137 + 19))) and (v115==0)) then v95=v87[v76];v96=v95[1649 -(1139 + 509) ];v115=1;end if ((v115==1) or ((6262 -1746)<=(1078 + 171))) then v99=1751 -(824 + 926) ;break;end end end if (((3026 -1518)>(1007 -(23 + 71))) and (v99==(1 + 0))) then if ((v96<=(41 -25)) or ((1132 + 821)>=(4682 -(189 + 71)))) then if ((v96<=(588 -(518 + 63))) or ((701 + 246)==(1698 -582))) then if (((2856 -1072)==1784) and (v96<=(7 -4))) then if ((v96<=(1 -0)) or (2889>(4356 -(85 + 905)))) then if (((2531 -1588)==943) and (v96==(1048 -(867 + 181)))) then local v143=(1809 + 71) -(1531 + 349) ;local v144;local v145;while true do if ((1729<=(10847 -6933)) and (0==v143)) then local v215=539 -(492 + 47) ;while true do if (((3714 -1035)<4053) and (v215==(344 -(54 + 289)))) then v143=1;break;end if ((v215==0) or ((6046 -4527)>(13126 -9311))) then v144=v95[11 -8 ];v145=v93[v144];v215=1659 -(1175 + 483) ;end end end if (((5304 -(963 + 47))>(95 + 657)) and (v143==(4 -3))) then for v222=v144 + (1301 -(1216 + 84)) ,v95[4] do v145=v145   .. v93[v222] ;end v93[v95[2]]=v145;break;end end else do return;end end elseif (((5659 -(156 + 1093))>=(3842 -2960)) and (v96>(3 -(1 + 0)))) then local v146=1984 -(70 + 1914) ;local v147;local v148;while true do if ((v146==(643 -(275 + (1135 -(646 + 121))))) or (583>((35061 -22726) -7975))) then v147=0 + 0 ;v148=nil;v146=1261 -(159 + (2921 -1820)) ;end if (((2849 -(348 + 1085))<=(4022 + 619)) and ((3 -2)==v146)) then while true do if ((v147==((576 -(95 + 481)) + 0)) or ((3063 + 18)==(566 + 881))) then v148=v95[1 + 1 ];v93[v148]=v93[v148](v93[v148 + 1 ]);break;end end break;end end else v76=v95[5 -2 ];end elseif (((5962 -(1406 + 163))<=4993) and (v96<=(8 -3))) then if (((5658 -3016)<=((7927 + 2055) -6427)) and (v96==(11 -(5 + 2)))) then v93[v95[2]]= #v93[v95[3]];else local v151=0;local v152;local v153;local v154;while true do if ((v151==(1441 -(1077 + 364))) or ((10506 -6355)<(4885 -(198 + 1021)))) then v152=0;v153=nil;v151=1700 -(514 + 1185) ;end if ((v151==(3 -2)) or ((832 -430)>=(1334 -(21 + 741)))) then v154=nil;while true do if (((345 -191)<=(4879 -1902)) and (v152==((1063 -(936 + 126)) + 0))) then v93[v153 + 1 ]=v154;v93[v153]=v154[v95[4]];break;end if ((((0 -0) + 0)==v152) or ((11679 -(4836 + 3185))<2310)) then v153=v95[1 + 1 ];v154=v93[v95[5 -2 ]];v152=604 -(440 + 163) ;end end break;end end end elseif (((1822 + 1015)>(2740 -1825)) and (v96>(4 + 2))) then v93[v95[5 -3 ]]=v93[v95[756 -(265 + 488) ]][v95[17 -13 ]];else v93[v95[14 -(8 + 4) ]]={};end elseif (((115 + 217 + 343)<(10618 -7790)) and (v96<=(9 + 2))) then if (((3973 -2738)<=(2608 -(510 + 182))) and (v96<=9)) then if (((1224 + 3334)>(6775 -3553)) and (v96>(19 -11))) then local v158=0 -0 ;local v159;local v160;local v161;local v162;while true do if ((v158==((22 -15) -5)) or ((1568 -(292 + 946))>(7759 -5260))) then for v223=v159,v77 do local v224=712 -(370 + 342) ;while true do if (((0 + 0 + 0)==v224) or ((1098 + 95)>(5118 -3487))) then v162=v162 + 1 ;v93[v223]=v160[v162];break;end end end break;end if (((0 + 0)==v158) or ((2207 -((127 -51) + 374))==(2375 -(84 + 119)))) then local v217=0 -(35 -(17 + 18)) ;while true do if (((3156 -(1018 + 383))<(4512 -(763 + 322))) and (v217==(1121 -(527 + 594)))) then v159=v95[2];v160,v161=v90(v93[v159](v93[v159 + ((1 -0) -0) ]));v217=1 + 0 ;end if ((1822<=(4310 -((940 -(126 + 799)) + 49))) and (v217==(4 -3))) then v158=1 + 0 ;break;end end end if ((v158==1) or ((5143 -(178 + (2009 -(523 + 1476))))<(2142 -(246 + 123)))) then local v218=0;while true do if ((v218==1) or (3078<=(1924 + 927))) then v158=525 -(38 + 485) ;break;end if (((1513 -(83 + 517))<(10160 -(4589 + 2240))) and (v218==(603 -(386 + 217)))) then v77=(v161 + v159) -(3 -2) ;v162=0 -0 ;v218=701 -(76 + 624) ;end end end end else v93[v95[2]]=v46[v95[3]];end elseif (((1548 -600)==((9410 -6569) -(977 + 916))) and (v96>(13 -3))) then v93[v95[5 -(1486 -(582 + 901)) ]]=v95[1688 -(1385 + 300) ]~=(0 + (1034 -(629 + 405))) ;else local v166=0 -0 ;local v167;local v168;local v169;local v170;while true do if (((6367 -(1366 + 220))==(1050 + 3731)) and (v166==((0 -0) + 0))) then v167=0 -0 ;v168=nil;v166=3 -2 ;end if (((119 -57)<=(1659 -1241)) and (v166==(1074 -(952 + 120)))) then while true do if (((4066 -(629 + (1274 -849)))==(3743 -731)) and (v167==(1 + 0))) then v170=1602 -((814 -192) + 980) ;for v252=v168,v95[4 + 0 ] do local v253=1938 -(1097 + 841) ;local v254;while true do if ((v253==(0 -0)) or ((8643 -5347)<(8373 -6205))) then v254=0;while true do if ((v254==0) or ((211 + 174)==(5165 -(1745 + 1790)))) then v170=v170 + 1 + 0 ;v93[v252]=v169[v170];break;end end break;end end end break;end if (((680 + 644)>=(2735 -2065)) and (v167==(0 + 0))) then local v243=0 -(1952 -(774 + 1178)) ;while true do if (((5499 -(1127 + 614))>=(840 + 52 + 167)) and ((2 -1)==v243)) then v167=2 -1 ;break;end if (((5455 -(892 + 860))>(680 + 61)) and (v243==0)) then v168=v95[2];v169={v93[v168](v93[v168 + 1 ])};v243=1;end end end end break;end if (((2 -1)==v166) or (((2852 + 1304) -(176 + 17))<=(12163 -8504))) then v169=nil;v170=nil;v166=3 -1 ;end end end elseif ((3257<(4918 -(246 + 17))) and (v96<=(7 + 6))) then if ((v96>(257 -((81 -60) + 224))) or (902==(2113 -(17 + 196)))) then if ((v95[2]<v93[v95[2 + (1192 -(217 + 973)) ]]) or (4416<=842)) then v76=v76 + ((777 -357) -(176 + 243)) ;else v76=v95[3];end elseif (((6445 -(1301 + 556))==(5258 -(308 + 362))) and (v93[v95[2]]==v95[4])) then v76=v76 + 1 ;else v76=v95[7 -4 ];end elseif ((206<(469 -191)) and (v96<=(89 -(65 + 10)))) then if ((v95[1 + 1 ]==v93[v95[1800 -((3027 -(109 + 1608)) + 486) ]]) or ((3973 -(1004 + 579))<=(2390 -(492 + 39)))) then v76=v76 + 1 + 0 ;else v76=v95[(1505 -(245 + 589)) -(506 + 162) ];end elseif ((v96>(1200 -(507 + 619 + 59))) or ((1484 -1157)>(711 + (521 -382)))) then local v208=0 -0 ;local v209;local v210;local v211;while true do if ((v208==(3 -2)) or ((203 + 1722)<=1752)) then v211=nil;while true do if (((4209 -(71 + 974))<=4910) and (v209==(1 + 0))) then while true do if (((4277 -2063)==((3852 -(1556 + 183)) + 101)) and (v210==(0 -(0 + 0)))) then v211=v93[v95[5 -1 ]];if ( not v211 or (((1494 -(915 + 276)) + 470)==(1312 + 415))) then v76=v76 + 1 + 0 ;else local v275=0;local v276;while true do if ((v275==((0 + 0) -0)) or ((748 + 3936)<273)) then v276=0 -0 ;while true do if ((4423<=(6800 -(1599 + 280))) and (v276==(0 + 0))) then v93[v95[6 -4 ]]=v211;v76=v95[13 -10 ];break;end end break;end end end break;end end break;end if (((4200 -(540 + 122))>=(1879 -(254 + 955))) and (v209==0)) then local v262=1696 -(111 + 1585) ;while true do if (((2053 -(143 + 477))==(76 + 1357)) and (v262==1)) then v209=262 -(186 + 75) ;break;end if ((v262==(650 -(582 + 68))) or ((264 + 4556)==(3772 -2551))) then v210=1400 -(323 + 943 + 134) ;v211=nil;v262=1 + 0 ;end end end end break;end if (((2421 -1561)<=(11920 -8110)) and (v208==(0 + 0 + 0))) then v209=0;v210=nil;v208=1 -0 ;end end elseif (((2887 -(83 + 163))>=(51 + 85)) and  not v93[v95[1267 -(1182 + 83) ]]) then v76=v76 + (1 -0) ;else v76=v95[3 + 0 ];end elseif ((v96<=(98 -73)) or ((1544 + 913)<=(614 -368))) then if ((v96<=(774 -(337 + 417))) or (789>793)) then if ((3804==(965 + 2839)) and (v96<=(199 -(60 + 121)))) then if ((4887>=(10152 -5604)) and (v96==((543 -(283 + 228)) -15))) then v93[v95[2 + 0 ]]=v93[v95[14 -11 ]] -v93[v95[4]] ;else local v172=0 + 0 ;local v173;while true do if ((v172==(0 -0)) or ((2142 + 2651)<=53)) then v173=v95[2 + 0 ];v93[v173](v93[v173 + 1 + 0 ]);break;end end end elseif ((v96==(187 -(135 + 33))) or ((7054 -(6339 -(1212 + 381)))>=(3622 -(7 + 0 + 1134)))) then v93[v95[4 -2 ]][v95[9 -6 ]]=v93[v95[4 + 0 ]];else local v176=(2246 -(337 + 337)) -(1167 + 405) ;local v177;local v178;while true do if (((4 -(2 + 1))==v176) or (3707<=1929)) then while true do if (((685 -(31 + 138 + 381))<(3327 -1878)) and (v177==0)) then v178=v95[6 -4 ];v93[v178](v14(v93,v178 + 1 ,v95[(17 + 145) -(138 + 21) ]));break;end end break;end if ((v176==(0 + 0 + 0)) or ((1798 + 2801)<=(1061 + 3516))) then local v220=0 + 0 ;while true do if ((1==v220) or ((1854 -1030)>(9 + 1914))) then v176=1 -0 ;break;end if ((0==v220) or ((2953 + 7)<=(979 -(1012 -(705 + 99))))) then v177=0;v178=nil;v220=1 + 0 + 0 ;end end end end end elseif ((v96<=22) or ((2518 -(383 + 1203))>(9951 -(24226 -16397)))) then if ((v96==((515 -(489 + 25)) + 20)) or ((2560 -(55 + 82))==2493)) then v93[v95[3 -1 ]]=v95[3];else local v181=0 -0 ;local v182;local v183;local v184;local v185;local v186;local v187;local v188;while true do if ((v181==(4 -2)) or (4089<=(7320 -4920))) then v186=nil;v187=nil;v181=2 + 1 ;end if ((v181==0) or (((1177 + 1579) -(1312 + (71 -44)))<(2902 -(1239 + 524)))) then v182=0 -0 ;v183=nil;v181=1;end if (((3656 -2132)<3522) and (v181==(1 -(0 -0)))) then v184=nil;v185=nil;v181=(4 -2) + 0 ;end if ((v181==(5 -2)) or ((113 + 33)>((6549 -4724) + 1208))) then v188=nil;while true do if ((v182==(2 + 0)) or ((940 + 1798)<(1684 -648))) then local v245=0;while true do if (((990 -426)<(3904 -(401 + (3244 -(1670 + 126))))) and (v245==(315 -((359 -(273 + 74)) + 302)))) then v182=157 -(133 + 21) ;break;end if (((4049 -(257 + 475))==(1614 + 369 + 1334)) and (v245==(0 + 0))) then v187=nil;v188=nil;v245=3 -2 ;end end end if ((v182==(1054 -(934 + 119))) or ((2239 -1108)>=(1515 + 2168))) then local v246=0 + 0 ;while true do if (((8495 -5413)<(4731 -(541 + 1027))) and (v246==(1490 -(284 + 1205)))) then v182=1 + 1 ;break;end if ((v246==(0 + 0)) or (((6331 -(229 + 134)) -4460)<=78)) then v185=nil;v186=nil;v246=2 -1 ;end end end if (((46 + 3547)<=(21871 -17185)) and (v182==(0 + 0))) then v183=(0 -0) + 0 ;v184=nil;v182=739 -(71 + 667) ;end if (((11778 -9315)<=(3676 -(53 + 162))) and (v182==3)) then while true do if ((v183==(291 -(249 + (1081 -(319 + 722))))) or ((3354 + 157)<(1596 -561))) then local v264=99 -(68 + 31) ;local v265;while true do if (((3907 -1251)<=(712 + 2434)) and (v264==(0 -0))) then v265=825 -((394 -187) + 618) ;while true do if ((v265==(1585 -(261 + 1323))) or (808>(631 + 2241))) then v183=2 + 0 + 1 ;break;end if ((v265==0) or ((8288 -4232)<(1333 + 1664))) then local v285=0 + 0 ;while true do if (((15664 -12061)==(8734 -5131)) and (v285==0)) then for v292=1,v185 do v93[v186 + v292 ]=v187[v292];end v188=v187[1 + 0 ];v285=2 -1 ;end if ((v285==(1 + 0)) or ((2831 -(482 + 14))>(3618 -(35 + 454)))) then v265=1 -(0 -0) ;break;end end end end break;end end end if (((3151 -2012)==(934 + 205)) and (v183==(2 -1))) then local v266=195 -(182 + 13) ;while true do if (((0 + (1666 -(259 + 1407)))==v266) or ((374 + 248 + 270)>=2794)) then v186=v184 + (1509 -(1099 + 408)) ;v187={v93[v184](v93[v184 + 1 + 0 ],v93[v186])};v266=3 -2 ;end if ((v266==(1 + 0 + 0)) or ((5129 -3732)==(1929 + 882))) then v183=2 + 0 ;break;end end end if ((v183==(0 -0)) or ((3025 -(150 + 451))<(341 + 90))) then local v267=0 + 0 + 0 ;local v268;while true do if ((v267==(0 + 0)) or (286==(2354 + 918))) then v268=0 + 0 ;while true do if ((v268==(1 + 0)) or (2907>=(10004 -6447))) then v183=1;break;end if ((v268==0) or ((4260 -(780 + 169))>3539)) then v184=v95[3 -1 ];v185=v95[15 -11 ];v268=1 -0 ;end end break;end end end if (((1 + 2)==v183) or (3283<=(2474 -1909))) then if (v188 or ((4069 -(87 + 529))==1673)) then local v272=0 + 0 ;while true do if (((189 + 160)==(35 + 63 + 251)) and (v272==(0 -0))) then v93[v186]=v188;v76=v95[(1 -0) + 2 ];break;end end else v76=v76 + 1 + 0 ;end break;end end break;end end break;end end end elseif ((4107<=4976) and (v96<=(953 -(468 + 462)))) then local v189=1145 -(1136 + 9) ;local v190;local v191;local v192;while true do if ((886<2455) and ((1369 -(169 + 1199))==v189)) then v192=1059 -(674 + 385) ;for v226=v190,v95[4] do local v227=421 -(382 + 39) ;local v228;local v229;while true do if ((v227==(46 -(20 + 26))) or (3575>(4922 -(109 + 901)))) then v228=0 -0 ;v229=nil;v227=2 -1 ;end if ((v227==(231 -(72 + 158))) or ((6546 -3019)<=(112 + 39 + 1080))) then while true do if ((v228==(1756 -((1542 -860) + (1686 -612)))) or ((1697 -(1145 + 414))>(147 + 761))) then v229=0 + 0 ;while true do if ((v229==(0 -0)) or (1901>=3853)) then v192=v192 + 1 + 0 + 0 ;v93[v226]=v191[v192];break;end end break;end end break;end end end break;end if ((v189==(487 -(452 + (81 -46)))) or (((10914 -(708 + 982)) -4307)<(2339 -(26 + 14)))) then local v221=0 + 0 ;while true do if ((1==v221) or ((8576 -6141)>(5081 -(157 + 920)))) then v189=228 -(134 + 73 + 20) ;break;end if (((5438 -(349 + 152))==4937) and (v221==(1568 -(1318 + 250)))) then v190=v95[5 -3 ];v191={v93[v190](v14(v93,v190 + 1 ,v77))};v221=933 -(20 + 912) ;end end end end elseif (((3552 -1817)==(2447 -(419 + 293))) and (v96==(70 -46))) then if ((((8922 -6868) -(514 + 186))>=(2359 -(1626 + 121))) and (v93[v95[7 -5 ]]<v95[9 -5 ])) then v76=v76 + (429 -(377 + 51)) ;else v76=v95[(2862 -(59 + 1189)) -(1045 + 566) ];end else v93[v95[2]]=v93[v95[517 -(364 + 150) ]] + v93[v95[3 + 1 ]] ;end elseif (((4343 -(303 + 130))>(4436 -(658 + 725))) and (v96<=(1239 -(1126 + 84)))) then if (((4285 -(529 + 370))<(1584 + 336 + 1611)) and (v96<=27)) then if (((1177 -(83 + 361))>=(355 -231)) and (v96==(43 -17))) then local v193=0 -0 ;local v194;local v195;while true do if (((3442 -(204 + 649))>(85 + 586)) and (v193==(1 + 0))) then while true do if ((v194==((1267 -(244 + 531)) -(363 + 129))) or ((353 + 1761)<=(2061 -((411 -(39 + 358)) + 1433)))) then v195=v95[2 + 0 ];v93[v195]=v93[v195](v14(v93,v195 + 1 ,v95[4 -1 ]));break;end end break;end if ((((7186 + 3956) -6525)>(4570 -(376 + 1617))) and (v193==(757 -(539 + 218)))) then v194=1989 -((6898 -5214) + 305) ;v195=nil;v193=1;end end else v93[v95[1 + 1 ]]=v93[v95[3 + 0 ]]/v93[v95[1310 -(544 + 762) ]] ;end elseif ((v96==(1177 -(803 + 346))) or ((234 + 3201)<=2093)) then v93[v95[1 + 1 ]]=v93[v95[9 -6 ]];else v93[v95[1 + 1 ]][v93[v95[2 + 1 ]]]=v93[v95[1 + 3 ]];end elseif ((v96<=(1444 -(362 + 1051))) or ((11316 -7675)<(7648 -4654))) then if (((4675 -831)>(14316 -11047)) and (v96==(6 + 24))) then if (((4541 -2105)<=(2732 + 1499)) and v93[v95[606 -(229 + 187 + 154 + 34) ]]) then v76=v76 + (1 -(0 -0)) ;else v76=v95[3];end else for v203=v95[1 + 1 ],v95[2 + 1 ] do v93[v203]=nil;end end elseif ((v96<=(65 -(12 + 21))) or ((2178 + 525)<=((717 + 151) -(164 + 209)))) then v93[v95[2 + (1996 -(703 + 1293)) ]][v95[1 + 2 ]]=v95[524 -(260 + 260) ];elseif ((3833>=(22 + (2027 -1438))) and (v96==(2029 -((1548 -(1397 + 139)) + 1984)))) then if ((v93[v95[3 -1 ]]~=v95[4]) or ((5331 -(89 + 1625))==(1935 -(1092 + 585)))) then v76=v76 + 1 ;else v76=v95[1859 -((1932 -(291 + 488)) + 703) ];end else v93[v95[2 -0 ]]=v93[v95[943 -(765 + 175) ]] + v95[3 + 1 ] ;end v76=v76 + 1 ;break;end end break;end end end end A,B=v41(v12(v80));if  not A[1] then local v100=v44[4][v76] or "?" ;error("Script error at ["   .. v100   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end

--4/1/23 8:26PM
