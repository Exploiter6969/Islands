do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v22,v23,...)local v27=1;local v28;v22=v5(v4(v22,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v79=v3(v1(v29,16));if v28 then local v86=0;local v87;while true do if (v86==0) then v87=v6(v79,v28);v28=nil;v86=1;end if (v86==1) then return v87;end end else return v79;end end end);local function v30(v31,v32,v33)if v33 then local v80=(v31/((1230 -((1336 -(184 + 11)) + 87))^(v32-(2 -1))))%(2^(((v33-1) -(v32-(1 + (1439 -(75 + 1364))))) + (1 -0))) ;return v80-(v80%(1 -0)) ;else local v81=0 + 0 + 0 ;local v82;while true do if (v81==(1972 -(1969 + 3))) then v82=((1031 -(971 + 53)) -5)^(v32-(3 -2)) ;return (((v31%(v82 + v82))>=v82) and 1) or ((602 -(140 + 462)) -0) ;end end end end local function v34()local v47=0;local v48;while true do if (v47==(770 -(636 + 133))) then return v48;end if (v47==(1944 -(1181 + 763))) then v48=v2(v22,v27,v27);v27=v27 + ((376 -(213 + 162)) -0) ;v47=613 -(537 + 75) ;end end end local function v35()local v49=0 + 0 + 0 ;local v50;local v51;while true do if (v49==(0 -0)) then v50,v51=v2(v22,v27,v27 + 2 + 0 );v27=v27 + (865 -(585 + 278)) ;v49=1 + 0 ;end if (1==v49) then return (v51 * (658 -402)) + v50 ;end end end local function v36()local v52=(0 -0) -0 ;local v53;local v54;local v55;local v56;while true do if (v52==(1392 -((844 -(44 + 55)) + 647))) then v53,v54,v55,v56=v2(v22,v27,v27 + 1 + 2 );v27=v27 + 2 + 2 ;v52=459 -(33 + 149 + 276) ;end if ((980 -(385 + 594))==v52) then return (v56 * ((56775106 -39997309) -(564 + 17))) + (v55 * (141747 -76211)) + (v54 * (2092 -(8 + 497 + (2046 -715)))) + v53 ;end end end local function v37()local v57=(0 + 0) -0 ;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (3==v57) then if (v62==(0 -0)) then if (v61==0) then return v63 * (167 -(106 + 61)) ;else local v113=0 + 0 ;while true do if (v113==0) then v62=1 -0 ;v60=0 -(0 -0) ;break;end end end elseif (v62==(3911 -1864)) then return ((v61==(0 + 0)) and (v63 * ((1148 -(512 + 635))/(0 + 0)))) or (v63 * NaN) ;end return v9(v63,v62-(20 + 1003) ) * (v60 + (v61/(2^(1128 -(494 + 40 + 542))))) ;end if (v57==(1016 -(424 + (1941 -1349)))) then v58=v36();v59=v36();v57=1;end if (v57==2) then v62=v30(v59,(1335 -(113 + 93)) -(405 + 703) ,72 -41 );v63=((v30(v59,75 -43 )==((2959 -(1244 + 42)) -(87 + 1585))) and  -(1 + 0)) or (685 -(159 + 525)) ;v57=5 -2 ;end if (v57==(1 + 0 + 0)) then v60=1 + 0 ;v61=(v30(v59,89 -(44 + 44) ,70 -50 ) * ((1 + 0 + 1)^(1318 -(237 + (2363 -(433 + 881)))))) + v58 ;v57=4 -(2 -0) ;end end end local function v38(v39)local v64=0 + 0 ;local v65;local v66;while true do if ((1763 -(1282 + 480))==v64) then v65=v4(v22,v27,(v27 + v39) -((1 + 1) -1) );v27=v27 + v39 ;v64=83 -(23 + 58) ;end if (v64==(9 -(14 -7))) then v66={};for v88=2 -(1 + 0) , #v65 do v66[v88]=v3(v2(v4(v65,v88,v88)));end v64=3 + (596 -(341 + 255)) ;end if (v64==(2002 -(1895 + 104))) then return v7(v66);end if (v64==(109 -(47 + 62))) then v65=nil;if  not v39 then local v96=0 + 0 ;while true do if (v96==0) then v39=v36();if (v39==(0 -0)) then return "";end break;end end end v64=1 + 0 ;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v67=0 + 0 ;local v68;local v69;local v70;local v71;local v72;local v73;local v74;while true do if (v67==(1811 -(688 + 1120))) then v74=nil;while true do local v90=0 -0 ;while true do if (v90~=(0 -0)) then else local v114=0 -0 ;while true do if (v114==(176 -(110 + 65))) then v90=1 + 0 ;break;end if (v114~=(1577 -(1117 + 460))) then else if (v68==0) then local v121=0 -0 ;while true do if (v121==(365 -(95 + 270))) then v69={};v70={};v121=1 + 0 ;end if (v121==(1 + 0)) then v71={};v68=1643 -(276 + 1366) ;break;end end end if (v68==(1 -0)) then local v122=0 + 0 ;while true do if (v122~=1) then else v74={};v68=1 + 1 ;break;end if (v122~=(560 -(424 + 136))) then else v72={v69,v70,nil,v71};v73=v36();v122=2 -1 ;end end end v114=1 -0 ;end end end if (v90==(1 -0)) then if (v68~=(1 + 1)) then else local v119=1699 -(975 + 724) ;while true do if (v119~=(1 + 0)) then else for v124=1,v36() do local v125=0;local v126;while true do if (v125==(0 -0)) then v126=v34();if (v30(v126,2 -1 ,801 -(631 + 169) )==(0 -0)) then local v139=0;local v140;local v141;local v142;local v143;local v144;while true do if (v139~=(1663 -(222 + 1440))) then else v142=nil;v143=nil;v139=1 + 1 ;end if (v139~=2) then else v144=nil;while true do if (v140~=2) then else while true do if (v141~=2) then else local v211=0 + 0 ;while true do if (v211==(0 + 0)) then if (v30(v143,1,1)==(1 + 0)) then v144[2]=v74[v144[3 -1 ]];end if (v30(v143,2 + 0 ,82 -(14 + 66) )==(830 -(145 + 684))) then v144[3]=v74[v144[381 -(85 + 293) ]];end v211=1417 -(1266 + 150) ;end if (v211==(3 -2)) then v141=1502 -(422 + 1077) ;break;end end end if (v141~=0) then else local v212=0 + 0 ;while true do if ((0 -0)==v212) then v142=v30(v126,2 + 0 ,7 -4 );v143=v30(v126,7 -3 ,2 + 4 );v212=1;end if (v212==(1 + 0)) then v141=1 -0 ;break;end end end if (v141~=(3 -2)) then else local v213=0 + 0 ;while true do if (v213~=(2 -1)) then else v141=2;break;end if (v213==(0 + 0)) then v144={v35(),v35(),nil,nil};if (v142==(0 -0)) then local v252=0 -0 ;local v253;while true do if (0~=v252) then else v253=0;while true do if (v253~=0) then else v144[4 -1 ]=v35();v144[2 + 2 ]=v35();break;end end break;end end elseif (v142==(1 + 0)) then v144[1 + 2 ]=v36();elseif (v142==(184 -(75 + 107))) then v144[4 -1 ]=v36() -(2^(29 -13)) ;elseif (v142~=(1 + 2)) then else local v276=0;local v277;while true do if (v276~=(0 + 0)) then else v277=0;while true do if (v277~=(0 -0)) then else v144[3]=v36() -((2 + 0)^(6 + 10)) ;v144[3 + 1 ]=v35();break;end end break;end end end v213=510 -(482 + 27) ;end end end if (v141~=3) then else if (v30(v143,907 -(705 + 199) ,2 + 1 )==(1 + 0)) then v144[17 -13 ]=v74[v144[4]];end v69[v124]=v144;break;end end break;end if ((1538 -(396 + 1142))~=v140) then else local v149=0 + 0 ;while true do if (v149~=(1044 -(65 + 979))) then else v141=0 -0 ;v142=nil;v149=1741 -(22 + 1718) ;end if (v149~=(1 + 0)) then else v140=1;break;end end end if (v140==1) then v143=nil;v144=nil;v140=1 + 1 ;end end break;end if (v139~=(1432 -(1051 + 381))) then else v140=657 -(278 + 379) ;v141=nil;v139=1 + 0 ;end end end break;end end end v68=1 + 2 ;break;end if (v119==0) then for v127=1,v73 do local v128=0 + 0 ;local v129;local v130;local v131;local v132;while true do if (v128==2) then while true do if (v129~=(1231 -(1207 + 24))) then else local v145=0;while true do if (v145==(0 -0)) then v130=0;v131=nil;v145=1;end if (v145~=(2 -1)) then else v129=1 + 0 ;break;end end end if (v129==1) then v132=nil;while true do if (v130~=(1 + 0)) then else if (v131==1) then v132=v34()~=(1326 -(397 + 929)) ;elseif (v131==(1290 -(1214 + 74))) then v132=v37();elseif (v131~=3) then else v132=v38();end v74[v127]=v132;break;end if (v130==(625 -(400 + 225))) then local v148=169 -(53 + 116) ;while true do if ((0 -0)==v148) then local v152=0 -0 ;while true do if (v152~=(1 + 0)) then else v148=102 -(37 + 64) ;break;end if (v152==0) then v131=v34();v132=nil;v152=1;end end end if (v148~=(845 -(763 + 81))) then else v130=3 -2 ;break;end end end end break;end end break;end if (v128~=(1666 -(969 + 696))) then else v131=nil;v132=nil;v128=7 -5 ;end if (v128==(937 -(464 + 473))) then v129=0 + 0 ;v130=nil;v128=2 -1 ;end end end v72[1358 -(687 + 668) ]=v34();v119=1;end end end if (v68~=(529 -(317 + 209))) then else local v120=0;while true do if (v120~=1) then else return v72;end if (v120==(1911 -(1446 + 465))) then for v133=1 + 0 ,v36() do v70[v133-(1 + 0) ]=v42();end for v135=1042 -(149 + 892) ,v36() do v71[v135]=v36();end v120=1169 -(794 + 374) ;end end end break;end end end break;end if (v67==0) then v68=0;v69=nil;v67=1 + 0 ;end if (1~=v67) then else v70=nil;v71=nil;v67=2 + 0 ;end if (v67==(1 + 1)) then v72=nil;v73=nil;v67=1586 -(1034 + 549) ;end end end local function v43(v44,v45,v46)local v75=0;local v76;local v77;local v78;while true do if (v75==0) then v76=v44[1];v77=v44[2];v75=1;end if (v75==1) then v78=v44[3];return function(...)local v91=1;local v92= -1;local v93={...};local v94=v13("#",...) -1 ;local function v95()local v97=v76;local v98=v77;local v99=v78;local v100=v41;local v101={};local v102={};local v103={};for v107=0 -0 ,v94 do if (((2070 + 1324)>=(2507 -(932 + 865))) and (v107>=v99)) then v101[v107-v99 ]=v93[v107 + (4 -3) ];else v103[v107]=v93[v107 + ((13 -10) -2) ];end end local v104=(v94-v99) + (93 -(55 + 37)) ;local v105;local v106;while true do local v108=528 -(482 + 46) ;local v109;local v110;while true do if ((2438<3755) and (v108==((436 -(398 + 37)) + 0))) then while true do if ((v109==(108 -(43 + 65))) or ((4061 -2984)>(4571 -(522 + 264)))) then v110=0 + 0 ;while true do if ((v110==((0 + 0) -0)) or ((866 + 2109)<2460)) then local v137=(2036 -(393 + 501)) -(508 + 634) ;local v138;while true do if ((v137==(0 -0)) or ((2859 + 1950)<=2121)) then v138=0 -0 ;while true do if ((v138==(0 + 0)) or ((2055 -(969 + 628))>(8323 -6129))) then local v146=0 + 0 ;while true do if (((674 + 192)<=(5440 -(214 + 1605))) and (v146==(1 + 0))) then v138=2 -1 ;break;end if ((1041==(76 + 965)) and (v146==0)) then v105=v97[v91];v106=v105[2 -1 ];v146=1 + 0 ;end end end if ((v138==(1 -0)) or ((16999 -13029)<((2744 -(669 + 922)) + 1531))) then v110=1 -0 ;break;end end break;end end end if (((4769 -(965 + 861))==(10576 -7633)) and (v110==(1 + 0))) then if (((1164 -(774 -(65 + 127)))<724) and (v106<=(31 -16))) then if (((3044 -((2689 -(239 + 948)) + 43))<=(2684 + 1206)) and (v106<=7)) then if (((11536 -8236)==(2303 + 997)) and (v106<=3)) then if (((3319 -1315)==(812 + 1192)) and (v106<=1)) then if (((3072 -(377 + 817))<=(4074 -(110 + 127))) and (v106==0)) then if ((v105[2]==v103[v105[4]]) or ((11657 -8453)<(449 + 1411))) then v91=v91 + (242 -(70 + 171)) ;else v91=v105[6 -3 ];end else local v153=(0 + 0) -(0 + 0) ;local v154;local v155;local v156;while true do if ((v153==0) or (1917>(194 + 3063))) then v154=0;v155=nil;v153=1;end if ((v153==(1 + 0)) or (4241<=(1784 -(910 + 106)))) then v156=nil;while true do if ((725==725) and (((225 -(81 + 144)) -0)==v154)) then v155=0 + 0 ;v156=nil;v154=1;end if ((v154==1) or ((20228 -15514)<=(4593 -(850 + 115)))) then while true do if ((v155==(0 -0)) or (((1329 + 3744) -((550 -221) + 1114))<=(245 + 2160))) then v156=v105[2 + 0 + 0 ];v103[v156]=v103[v156](v14(v103,v156 + 1 ,v105[3]));break;end end break;end end break;end end end elseif (((47 + 184)<(5598 -((2166 -727) + 192))) and (v106>(1 + 1))) then if ((v103[v105[2 -0 ]]<v105[993 -(773 + 216) ]) or (2631<=(1073 + 1151))) then v91=v91 + 1 ;else v91=v105[3];end else v103[v105[3 -1 ]]=v105[(5 + 0) -2 ];end elseif (((4024 + 713)>=(4917 -(159 + 990))) and (v106<=(10 -5))) then if ((v106>(118 -(111 + 3))) or ((2495 + 1330)<=(5267 -3594))) then v103[v105[2]]=v103[v105[238 -(123 + 112) ]] + v103[v105[304 -(23 + 277) ]] ;else local v160=0 -0 ;local v161;local v162;while true do if (((4980 -((1433 -(1007 + 122)) + 39))==(1450 + 3187)) and (v160==(1 + 0))) then while true do if (((4690 -(771 + 1123))>(3390 -(10 + 125 + 485))) and (v161==(0 + 0))) then v162=v105[978 -(914 + 62) ];v103[v162](v14(v103,v162 + (3 -2) ,v105[3 + 0 ]));break;end end break;end if (((0 + 0)==v160) or ((947 -322)>=((928 -(542 + 106)) + 1446))) then v161=0 + 0 ;v162=nil;v160=1;end end end elseif ((v106==6) or ((1365 + 3382)==(1743 -988))) then v103[v105[1262 -(161 + 1099) ]]=v103[v105[3 + 0 ]] + v105[(2 + 5) -3 ] ;else v103[v105[4 -2 ]][v103[v105[6 -(3 + 0) ]]]=v103[v105[949 -(929 + (31 -15)) ]];end elseif (((27 + 1490)<(6454 -(989 + 483))) and (v106<=(6 + 5))) then if (((6098 -(1181 + 418))>=(2530 -(179 + 613))) and (v106<=(22 -13))) then if ((4156<=4286) and (v106==8)) then if ((v103[v105[9 -7 ]]~=v105[4]) or ((567 + 1633)>(4644 -(607 + 1203)))) then v91=v91 + 1 ;else v91=v105[4 -1 ];end else v103[v105[1 + 1 + 0 ]][v105[3 + 0 + 0 ]]=v103[v105[4]];end elseif ((v106>(20 -10)) or (318>=(1362 + 62))) then for v209=v105[1 + (4 -3) ],v105[1715 -(225 + 1487) ] do v103[v209]=nil;end else v103[v105[2 + 0 + 0 ]]= #v103[v105[1056 -(56 + (2940 -(287 + 1656))) ]];end elseif ((v106<=(31 -18)) or ((11851 -9011)>(4253 -((316 -142) + 2)))) then if ((v106>(301 -(136 + 153))) or ((3441 -2607)>(7244 -3764))) then v103[v105[2 + 0 ]][v105[5 -2 ]]=v105[4];else v103[v105[896 -(212 + 682) ]]=v103[v105[1 + 2 ]] -v103[v105[1 + 3 ]] ;end elseif ((v106>(256 -(209 + 33))) or (3997==(1839 + 78))) then v103[v105[2 + 0 ]]=v105[3]~=0 ;else local v173=(993 + 575) -(263 + 1305) ;local v174;local v175;local v176;while true do if ((0==v173) or ((3965 + 581)==1396)) then v174=v105[1207 -(832 + 373) ];v175={v103[v174](v103[v174 + 1 ])};v173=1;end if ((v173==((2 -1) -0)) or ((1814 -(1050 + (427 -116)))>=2187)) then v176=0 + 0 ;for v237=v174,v105[8 -4 ] do local v238=0 + 0 ;local v239;while true do if ((v238==0) or (((3264 -(706 + 328)) -(740 + 487))==(1651 -(11 + 1026)))) then v239=(0 + 0) -0 ;while true do if ((v239==(0 + 0)) or ((3335 -2059)>(3162 -(38 + 1048)))) then v176=v176 + 1 ;v103[v237]=v175[v176];break;end end break;end end end break;end end end elseif (((34 + 295)<(1922 + 1123)) and (v106<=(14 + 9))) then if (((9283 -4907)>=(425 -253)) and (v106<=19)) then if ((v106<=(8 + 9)) or ((5202 -(42 + 608))<=(317 + 1136))) then if (((3132 + 1348)<(1346 + 3586)) and (v106==(798 -(595 + (2026 -(1743 + 96)))))) then local v177=1032 -(901 + 131) ;local v178;local v179;local v180;local v181;local v182;while true do if ((((2654 -(884 + 569)) + 2270)<(12417 -(32191 -23845))) and (v177==0)) then v178=0 -0 ;v179=nil;v177=1 -0 ;end if ((v177==(1 + 0)) or ((3214 -(27 + 22))>(6783 -3453))) then v180=nil;v181=nil;v177=2;end if (((3322 -(52 + 81))<(1988 + 760 + 791)) and (v177==(1210 -((1668 -(524 + 659)) + 723)))) then v182=nil;while true do if (((2788 + 1602)>(8696 -5531)) and (v178==1)) then v92=(v181 + v179) -(1 + 0) ;v182=0 + 0 ;v178=1 + 1 ;end if ((v178==(447 -(123 + 322))) or ((7793 -6231)>(12804 -8219))) then for v254=v179,v92 do local v255=0 -0 ;while true do if ((((51484 -35227) -(4438 + 7416))<=(8354 -(11117 -7294))) and (v255==(0 -0))) then v182=v182 + 1 + 0 ;v103[v254]=v180[v182];break;end end end break;end if ((((71 + 5920) -(697 + 556))==(15811 -11073)) and (v178==(0 + 0))) then v179=v105[(2 + 7) -7 ];v180,v181=v100(v103[v179](v103[v179 + (1 -0) ]));v178=1 + 0 + 0 ;end end break;end end else local v183=(0 -0) + 0 ;local v184;while true do if (((4114 -(358 + 104))>(4900 -(5825 -4138))) and (v183==(1558 -(928 + 630)))) then v184=v105[3 -1 ];v103[v184]=v103[v184](v103[v184 + (2 -(1 + 0)) ]);break;end end end elseif (((2581 -1002)>=(1952 -(828 + 354))) and (v106==(15 + 3))) then if (((1638 -1224)<=(55 + 429)) and (v105[429 -(35 + 392) ]<v103[v105[574 -(523 + 47) ]])) then v91=v91 + 1 + 0 ;else v91=v105[11 -8 ];end else v103[v105[8 -6 ]]=v46[v105[3]];end elseif ((v106<=(560 -(38 + 501))) or ((5999 -1806)<(3988 -(4926 -3682)))) then if ((v106>(45 -25)) or ((4401 -(1149 + (1034 -(450 + 246))))>(5141 -(1480 + 2)))) then local v187=1940 -(247 + 1693) ;local v188;local v189;while true do if ((v187==0) or ((2148 -(619 + 337))<=88)) then v188=v105[2];v189=v103[v105[2 + 1 ]];v187=1;end if ((v187==(1 + 0)) or ((4791 -(1004 + (3771 -2827)))<((2957 -1942) + (1787 -(1523 + 143))))) then v103[v188 + (681 -(454 + 226)) + 0 ]=v189;v103[v188]=v189[v105[11 -7 ]];break;end end else v103[v105[2]]=v103[v105[3]]/v103[v105[1906 -(304 + 1598) ]] ;end elseif (((142 -23)<2607) and (v106>(984 -(161 + 801)))) then local v191=0 -(0 -0) ;local v192;local v193;while true do if (((1591 + 3178)>(15597 -11203)) and (v191==1)) then while true do if (((4868 -2787)>(5107 -3216)) and (v192==0)) then v193=v105[2 + 0 ];v103[v193](v103[v193 + 1 + 0 ]);break;end end break;end if ((v191==(0 + 0)) or ((4345 -2437)<((3503 -2050) + 41))) then local v233=0 -0 ;while true do if (((7445 -4175)>=(197 + 1005)) and (v233==(0 -0))) then v192=1404 -(307 + 1097) ;v193=nil;v233=1613 -(137 + 1475) ;end if (((3346 -(16 + 25))>(704 -(512 + 107))) and ((1 -0)==v233)) then v191=1 + 0 ;break;end end end end elseif (v103[v105[2]] or ((6461 -2389)<=1770)) then v91=v91 + (1906 -(545 + 59 + 1301)) ;else v91=v105[1926 -(643 + 1280) ];end elseif (((6900 -4750)>(6370 -4302)) and (v106<=(1496 -(802 + 667)))) then if ((v106<=25) or (578>=((6966 -3843) -(76 + 15)))) then if ((v106==((466 -365) -77)) or ((14682 -(20679 -10758))<((7177 -2515) -(51 + 58 + 0)))) then local v194=0 -0 ;local v195;local v196;local v197;while true do if ((v194==0) or (3635<=(1149 + 497))) then local v234=0;while true do if (((13738 -9212)<=(6689 -((1180 -(28 + 36)) + (2800 -(405 + 1529))))) and (v234==0)) then v195=v105[179 -(11 + 166) ];v196={v103[v195](v14(v103,v195 + 1 ,v92))};v234=1509 -(720 + 276 + 512) ;end if ((504<=(11199 -6348)) and (v234==((1413 -(1076 + 336)) + 0))) then v194=(637 + 9) -(434 + 211) ;break;end end end if ((v194==(197 -(175 + 21))) or ((10925 -8104)<1908)) then v197=0;for v240=v195,v105[1229 -(219 + 1006) ] do local v241=0 + 0 ;local v242;while true do if ((v241==(0 + 0)) or (1272<((3605 -(368 + 635)) -1529))) then v242=0 + 0 ;while true do if ((3569>672) and (v242==(0 -0))) then v197=v197 + (2 -1) ;v103[v240]=v196[v197];break;end end break;end end end break;end end else do return;end end elseif (((4914 -((1941 -(464 + 3)) + 60))>=245) and (v106>((1504 -927) -(51 + 500)))) then if ((v103[v105[264 -(153 + 109) ]]==v105[4 + 0 ]) or (925>((3745 + 1921) -(959 + 68)))) then v91=v91 + 1 + 0 ;else v91=v105[472 -(38 + 431) ];end else local v198=0 -(0 -0) ;local v199;local v200;local v201;local v202;local v203;local v204;local v205;while true do if (((644 -((201 -111) + 554))==v198) or (((604 -324) + 67)>=3636)) then v199=1914 -(1725 + 189) ;v200=nil;v198=1 -0 ;end if ((v198==(1322 -(503 + 817))) or (4171<=(6855 -4932))) then v203=nil;v204=nil;v198=3;end if ((909==(2315 -(45 + 1149 + 212))) and (v198==((1 -0) + 2))) then v205=nil;while true do if (((1 -0)==v199) or ((931 -(225 + 71))==108)) then local v247=(503 -(414 + 89)) -0 ;while true do if ((v247==(0 + 0)) or (1025<(497 + 382))) then v202=nil;v203=nil;v247=217 -(195 + 2 + 19) ;end if (((732 + 1802 + 495)<=4324) and (v247==(1425 -((3243 -2146) + 327)))) then v199=1 + 1 ;break;end end end if (((10516 -6466)==(5342 -(878 + 414))) and (v199==(1175 -(972 + 200)))) then while true do if ((v200==(1 + 1)) or ((9595 -6343)<(361 + 209))) then local v259=(1765 -(244 + 762)) -(524 + 235) ;while true do if ((v259==(1532 -(884 + 647))) or (1979>(1006 + 1591))) then v200=3 + 0 ;break;end if (((2957 -((1781 -(171 + 432)) + 748))<=3499) and (v259==((0 -0) -0))) then for v278=126 -(84 + 41) ,v202 do v103[v203 + v278 ]=v204[v278];end v205=v204[1 + 0 ];v259=1555 -(1213 + 341) ;end end end if ((1==v200) or ((40 + 851)>=(6129 -(1810 + 75)))) then local v260=935 -(326 + 609) ;local v261;while true do if ((v260==0) or (3554<(194 + 911))) then v261=(5029 -3379) -(450 + 1200) ;while true do if ((((2239 -(321 + 130)) -(268 + 936))>(29 + 13)) and ((0 -0)==v261)) then v203=v201 + 2 ;v204={v103[v201](v103[v201 + 1 + 0 ],v103[v203])};v261=1 + 0 ;end if (((1 -0)==v261) or ((14322 -9786)<(552 + 2971))) then v200=1 + 1 + 0 ;break;end end break;end end end if (((2268 -(96 + 76))>(2257 -(341 + 1001))) and ((14 -11)==v200)) then if ((4356>(1578 -687)) and v205) then local v270=0;local v271;while true do if ((v270==(396 -(56 + 340))) or ((11370 -7781)<(143 + 1573))) then v271=0 + 0 ;while true do if ((0==v271) or ((815 + 762 + 479)<(514 -169))) then v103[v203]=v205;v91=v105[1494 -(1075 + 416) ];break;end end break;end end else v91=v91 + 1 + 0 ;end break;end if ((v200==(0 + 0)) or ((188 + 5)>1252)) then local v262=386 -(24 + 362) ;while true do if (((1542 + 970)>=(925 + 961)) and ((0 + 0)==v262)) then local v273=1287 -(861 + (1073 -647)) ;while true do if (((4737 -(797 + 465))>=((5747 -3535) + 299)) and (v273==(0 -0))) then v201=v105[(1070 -(787 + 282)) + (1640 -(215 + 1424)) ];v202=v105[1046 -(95 + 947) ];v273=1;end if (((3404 + 628)>2211) and (v273==(1 + 0))) then v262=1 + 0 ;break;end end end if (((3029 -(1682 + (457 -(210 + 13))))<=((2258 -1042) + 91)) and (v262==(1 + 0))) then v200=1 + 0 ;break;end end end end break;end if ((v199==(1414 -(728 + 572 + 114))) or ((6730 -4690)>4069)) then v200=124 -((256 -(74 + 92)) + 34) ;v201=nil;v199=1 + 0 ;end if ((v199==(2 -0)) or (((211 -100) + 1130)>=(7042 -3531))) then v204=nil;v205=nil;v199=(4067 -2855) -(1036 + 173) ;end end break;end if (((258 + 213)<=(4535 -(56 + 265))) and (v198==(2 -(1 -0)))) then v201=nil;v202=nil;v198=2 + 0 ;end end end elseif ((v106<=(841 -(657 + 155))) or (((7963 -(396 + 1059)) -3593)<=(905 -(133 + 493)))) then if ((v106>(14 + 14)) or (3214>(2690 + 541))) then v103[v105[2]]=v103[v105[2 + 1 ]][v105[4]];elseif (((648 + 322)<=(1673 + 1232)) and  not v103[v105[1 + 1 ]]) then v91=v91 + 1 ;else v91=v105[3];end elseif ((v106<=(1822 -(59 + (2908 -(636 + 539))))) or ((2623 -(100 + 1476))>=(2901 -(802 + 524)))) then v91=v105[3];elseif ((v106>(108 -(188 -111))) or ((5441 -4032)>=1743)) then v103[v105[2]]=v103[v105[3]];else v103[v105[1 + 1 ]]={};end v91=v91 + 1 + 0 ;break;end end break;end end break;end if (((6173 -2035)>=(5394 -(290 + 1032))) and (((1868 -(405 + 31)) -(759 + 673))==v108)) then v109=0 -0 ;v110=nil;v108=1610 -(1450 + 159) ;end end end end A,B=v41(v12(v95));if  not A[1] then local v111=0;local v112;while true do if (v111==0) then v112=v44[4][v91] or "?" ;error("Script error at ["   .. v112   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end end;end end end return v43(v42(),{},v23)(...);end;vv10(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end

--4/1/2023 8:07PM
