do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (1==v18) then v21=function(v31,v32,v33)if v33 then local v74=(v31/((2 + 0)^(v32-(752 -(207 + 544)))))%((925 -(821 + 102))^(((v33-((2250 -1140) -(921 + 154 + 34))) -(v32-(2 -1))) + 1 + 0)) ;return v74-(v74%(2 -1)) ;else local v75=(8 -6)^(v32-(1 + 0)) ;return (((v31%(v75 + v75))>=v75) and (1752 -(1424 + 327))) or (0 + 0) ;end end;v22=nil;v22=function()local v39=0;local v40;while true do if (v39==(1725 -((2635 -(616 + 728)) + 433))) then return v40;end if (v39==((0 + 0) -(0 -0))) then v40=v1(v16,v19,v19);v19=v19 + (1648 -(957 + 690)) ;v39=1 -0 ;end end end;v23=nil;v18=2;end if (v18==5) then v30=nil;v30=function(v34,v35,v36)local v41=v34[1];local v42=v34[2];local v43=v34[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v76=v41;local v77=v42;local v78=v43;local v79=v28;local v80={};local v81={};local v82={};for v88=0 -0 ,v70 do if ((v88>=v78) or (((2805 -1567) + 36)>(6227 -(1123 + 476 + (119 -65))))) then v80[v88-v78 ]=v69[v88 + (2 -1) ];else v82[v88]=v69[v88 + (1372 -(745 + 626)) ];end end local v83=(v70-v78) + (782 -(527 + 254)) ;local v84;local v85;while true do local v89=0 -(0 -0) ;local v90;while true do if (((0 -0)==v89) or (782>=(1269 + 207))) then v90=0;while true do if (((18139 -14317)>=(2994 -589)) and (v90==(1799 -(1107 + 692)))) then local v102=0 -0 ;while true do if (((1 + 0)==v102) or ((517 + 264)<=(113 + 5 + 268))) then v90=3 -2 ;break;end if ((v102==(0 + 0)) or ((16867 -(314 + 12293))<=149)) then local v117=1137 -(34 + (2206 -(1021 + 82))) ;while true do if ((1509>=666) and (v117==1)) then v102=1;break;end if ((v117==((881 -(55 + 59)) -((1352 -648) + 63))) or ((107 + 1010)>(4386 -(702 + 1069)))) then v84=v76[v67];v85=v84[1];v117=1 + 0 + 0 ;end end end end end if ((v90==(1 + 0)) or (2655==3295)) then if ((v85<=(11 + (1958 -(495 + 1458)))) or ((2421 -(125 + 298))>=(5454 -(399 + 1394)))) then if ((2046<3497) and (v85<=((35 -22) -6))) then if ((v85<=((2 + 268) -(96 + 171))) or (((2287 + 2360) -(1229 + 559))>=(4273 + 90))) then if ((3226>1939) and (v85<=1)) then if ((1945==(1988 -(22 + 21))) and (v85>0)) then local v127=0;local v128;local v129;local v130;local v131;local v132;while true do if ((((1847 + 2962) -(171 + 179))>=(286 + 577)) and (v127==(0 + 0))) then v128=v84[1536 -(1286 + 248) ];v129=v84[8 -4 ];v127=1;end if ((872>=(1934 -(715 + 419))) and (v127==((1 + 3) -1))) then if (v132 or ((5224 -(208 + 76))==((5994 -(13 + 217)) -(684 + 146)))) then local v222=854 -(294 + 560) ;local v223;local v224;while true do if ((3217>2313) and (v222==(1797 -(1165 + 632)))) then v223=0 + 0 ;v224=nil;v222=1 + 0 ;end if ((v222==(1 -0)) or ((3133 -(798 + 826))>=(246 + 3396))) then while true do if ((234<(4460 -(524 + 422))) and (v223==(0 + 0))) then v224=0;while true do if ((v224==0) or ((608 + 491)<=(427 -301))) then v82[v130]=v132;v67=v84[1610 -(526 + 1081) ];break;end end break;end end break;end end else v67=v67 + 1 + 0 ;end break;end if ((v127==(2 + 0)) or (18==(1971 -(498 + 6 + 12)))) then for v216=1 + (934 -(676 + 258)) ,v129 do v82[v130 + v216 ]=v131[v216];end v132=v131[1 + 0 ];v127=1 + 2 ;end if ((2894<=((187 -96) + 2892)) and (v127==(1 + 0))) then local v207=933 -(208 + 725) ;while true do if (((7554 -3446)>(4811 -(99 + 776))) and (v207==((0 -0) + 0))) then v130=v128 + (1758 -(1393 + 363)) ;v131={v82[v128](v82[v128 + (49 -(30 + 18)) ],v82[v130])};v207=1 + 0 ;end if ((v207==(1 + 0)) or ((899 -352)==(144 + 274))) then v127=41 -(25 + 14) ;break;end end end end else v82[v84[1119 -(807 + 310) ]]=v36[v84[3]];end elseif ((v85==(1314 -(1186 + 126))) or ((163 + 2653)>=(16600 -12387))) then local v135=0 -(0 + 0) ;local v136;local v137;local v138;local v139;local v140;while true do if ((v135==0) or ((1349 -457)>(3841 -(85 + 71)))) then v136=0 -0 ;v137=nil;v135=1701 -(985 + 715) ;end if ((v135==2) or ((4732 -(730 + 22))<(9536 -5827))) then v140=nil;while true do if ((v136==(1 + 0)) or (1533==(4847 -1812))) then local v228=0 -0 ;while true do if (((3549 + 125)==(4474 -(288 + 512))) and (v228==(1 + 0))) then v136=1321 -(49 + 1270) ;break;end if (((39 + 542)<=((12629 -8373) -(363 + 23))) and ((0 + 0)==v228)) then v139=nil;v140=nil;v228=2 -1 ;end end end if (((169 + 792)==(2999 -2038)) and (v136==(1949 -(850 + 1097)))) then while true do if ((1848<=(7005 -(1230 + 2936))) and (v137==1)) then v140=1128 -(351 + 777) ;for v256=v138,v84[2 + 2 ] do local v257=0 -0 ;local v258;while true do if ((v257==(1739 -(346 + 1393))) or ((863 -(5 + 646))>(2746 + 2000))) then v258=0 -0 ;while true do if ((v258==((2288 -1271) -(842 + 175))) or (932>(3136 -(109 + 11)))) then v140=v140 + (1902 -(232 + 1669)) ;v82[v256]=v139[v140];break;end end break;end end end break;end if ((3022==(3032 -(9 + 1))) and (v137==(0 -0))) then local v250=1597 -(1593 + 4) ;while true do if ((v250==(2 -1)) or ((1272 + (4532 -(758 + 433)))<(15716 -11252))) then v137=1 + 0 ;break;end if ((657==657) and (v250==(0 + 0))) then v138=v84[932 -(638 + 292) ];v139={v82[v138](v13(v82,v138 + (1540 -(404 + 1135)) ,v68))};v250=1 + (0 -0) ;end end end end break;end if (((1436 -(120 + 117))<4418) and (v136==(778 -(515 + 263)))) then local v229=(3986 -2923) -((3292 -2248) + 19) ;while true do if (((3867 -1349)<(607 + 4017)) and (v229==((0 -0) + 0 + 0))) then v137=(0 -0) + 0 ;v138=nil;v229=1;end if (((5521 -3146)<=((6599 -2674) -(166 + 59))) and (v229==(1 + 0))) then v136=1 + 0 ;break;end end end end break;end if (((1775 -(1502 + 272))==v135) or ((2134 -1466)<(566 -(327 + 95)))) then v138=nil;v139=nil;v135=51 -(32 + 17) ;end end else v82[v84[2 + 0 ]][v84[4 -1 ]]=v82[v84[10 -6 ]];end elseif ((2668>(3888 -1686)) and (v85<=5)) then if ((4823==(15687 -10864)) and (v85==4)) then do return;end elseif ((v82[v84[129 -(105 + 22) ]]<v84[11 -(2 + 5) ]) or ((4851 -((2425 -(1139 + 815)) + 39))<(4055 -(4831 -3025)))) then v67=v67 + (931 -(654 + 276)) ;else v67=v84[614 -(15 + 596) ];end elseif ((v85>6) or ((4092 -1613)<(4163 -(958 + 391 + 589)))) then v82[v84[627 -(190 + 435) ]]=v82[v84[2 + 1 + 0 ]] + v82[v84[4]] ;else v82[v84[4 -2 ]]= #v82[v84[1055 -(429 + 505 + 118) ]];end elseif ((657<(5099 -(132 + 395))) and (v85<=11)) then if (((1557 + 485)<(20277 -(49219 -33799))) and (v85<=(1883 -(450 + 216 + 1208)))) then if ((v85>(190 -(87 + 95))) or ((3660 -(26 + 124))<(2037 + 1048))) then if (((2264 -(1211 + 417))<=(4211 -(1291 + 326))) and v82[v84[1594 -(169 + 229 + 1194) ]]) then v67=v67 + 1 ;else v67=v84[1702 -(841 + 858) ];end else v82[v84[2]]=v82[v84[(2635 -(94 + 1465)) -(200 + 873) ]][v84[9 -(5 + 0) ]];end elseif ((4621>((2074 + 36) -(137 + 821))) and (v85==10)) then if ((3536==(4571 -(593 + 442))) and (v84[1845 -(259 + 1584) ]<v82[v84[7 -3 ]])) then v67=v67 + 1 + 0 ;else v67=v84[3];end elseif ((v84[2 + 0 ]==v82[v84[4]]) or ((7541 -2942)<840)) then v67=v67 + (2 -1) ;else v67=v84[8 -5 ];end elseif ((297<=((3221 -(295 + 619)) + 1926)) and (v85<=(5 + (1994 -(1240 + 746))))) then if ((v85>(3 + 9)) or (1507>(1640 + 1496))) then v82[v84[2 + 0 + 0 ]]=v84[1 + (984 -(813 + 169)) ];else v82[v84[8 -6 ]]=v82[v84[(14 -9) -2 ]];end elseif ((v85<=(69 -55)) or (3861<(3560 -((18 -13) + 278)))) then local v151=0 -0 ;local v152;local v153;local v154;while true do if ((382<(3671 -1816)) and (v151==(3 -2))) then v154=nil;while true do if ((((6483 -4119) -1023)>=(2826 -(1579 + 222))) and (v152==(1 + 0))) then while true do if (((3403 -(2009 -(1243 + 186)))<(10462 -6887)) and (v153==(0 -0))) then v154=v84[1523 -(567 + 954) ];v82[v154](v13(v82,v154 + (291 -(255 + 35)) ,v84[10 -7 ]));break;end end break;end if (((7667 -3548)<=(13416 -9004)) and (v152==(0 -0))) then v153=0 + 0 ;v154=nil;v152=4 -3 ;end end break;end if ((v151==0) or ((2029 -(2682 -(209 + 1638)))<=(327 -58))) then v152=(2999 -1821) -(70 + 1108) ;v153=nil;v151=1 -0 ;end end elseif (((2563 + 1199)>((1951 -935) + (311 -117))) and (v85==(58 -43))) then v82[v84[1508 -((1429 -(252 + 709)) + (1331 -(291 + 2))) ]]={};else for v208=v84[3 -1 ],v84[3] do v82[v208]=nil;end end elseif ((v85<=(17 + 8)) or ((3523 -(287 + 1592))>=(782 + 1199))) then if (((7876 -6077)>(190 + 412)) and (v85<=(56 -36))) then if ((v85<=(900 -(470 + 412))) or (3936<((232 + 1426) -(362 + (1888 -1223))))) then if (((19221 -14592)>(2348 -1261)) and (v85>(28 -11))) then local v155=0 + 0 ;local v156;local v157;local v158;while true do if (((1571 -(743 + (6 -2)))<=3307) and ((694 -((551 -(23 + 343)) + 509))==v155)) then v156=0;v157=nil;v155=1;end if ((2114>(1490 -((1222 -(627 + 389)) + 185))) and (v155==1)) then v158=nil;while true do if ((1447<(7077 -2261)) and ((0 + 0)==v156)) then local v230=0;while true do if ((v230==(0 -0)) or ((6415 -(138 + 1723))==(3155 -(24 + 252)))) then v157=v84[143 -(127 + 14) ];v158=v82[v84[7 -4 ]];v230=2 -1 ;end if ((v230==(311 -(38 + 272))) or (4254==(386 -(20 + 44)))) then v156=1;break;end end end if ((2499<4840) and (1==v156)) then v82[v157 + 1 + 0 ]=v158;v82[v157]=v158[v84[1717 -(710 + 1003) ]];break;end end break;end end else v82[v84[4 -2 ]]=v82[v84[4 -1 ]] + v84[4] ;end elseif (((2166 + 347 + 347)<(4505 + 266)) and (v85>(851 -(372 + 460)))) then v82[v84[1802 -(351 + 1449) ]][v84[3]]=v84[4];else local v162=0 + 0 ;local v163;local v164;while true do if ((v162==1) or (2706==((3775 -(94 + 121)) -((2976 -1803) + 17)))) then for v219=v163 + 1 ,v84[(21 -12) -5 ] do v164=v164   .. v82[v219] ;end v82[v84[2]]=v164;break;end if ((v162==(0 -0)) or (2539==(4658 -(56 + 131)))) then v163=v84[494 -(314 + 177) ];v164=v82[v163];v162=1;end end end elseif ((v85<=22) or ((2952 -2169)>=(5587 -(3040 -1708)))) then if ((v85==(81 -60)) or ((3656 -(1608 + 222))==(1165 -(61 + 214)))) then local v165=(230 -64) -(81 + (151 -66)) ;local v166;while true do if ((v165==(0 + 0)) or ((2430 -(15 + 2))<(3309 -1501))) then v166=v82[v84[1822 -(127 + 1691) ]];if (((2269 -(1036 + 915))<3210) and  not v166) then v67=v67 + 1 + 0 ;else local v225=0;local v226;local v227;while true do if ((v225==(1 + (0 -0))) or (((1697 -(7 + 7)) + 3182)<=((1431 + 1903) -(20 + 422)))) then while true do if ((v226==0) or (11>(16964 -12963))) then v227=1185 -(529 + 656) ;while true do if ((v227==(607 -(25 + 87 + 495))) or ((4654 -1770)>(2882 + 29))) then v82[v84[198 -((1711 -(453 + 1225)) + 163) ]]=v166;v67=v84[1550 -(789 + 758) ];break;end end break;end end break;end if ((v225==0) or (946==(1208 -(89 + 82 + 101)))) then v226=632 -(614 + 18) ;v227=nil;v225=3 -(1 + 1) ;end end end break;end end else v82[v84[4 -2 ]]=v82[v84[680 -(398 + 279) ]]/v82[v84[17 -13 ]] ;end elseif (((878 + 3799)>408) and (v85<=(3 + (960 -(182 + 758))))) then local v168=0 + 0 ;local v169;local v170;while true do if (((3124 -(1339 + 297))>(629 -496)) and (v168==(0 + 0))) then v169=634 -(200 + 434) ;v170=nil;v168=1047 -(166 + 327 + 553) ;end if ((v168==(1 + 0)) or ((10586 -5701)==(815 -508))) then while true do if ((v169==0) or (2904<=(2407 -(948 + 231)))) then v170=v84[715 -(238 + 475) ];v82[v170]=v82[v170](v82[v170 + 1 + 0 ]);break;end end break;end end elseif (((2061 -(1307 + 112))<(13394 -8710)) and (v85>((847 + 1074) -(84 + (3694 -1881))))) then if ((v82[v84[1590 -(861 + 727) ]]==v84[8 -4 ]) or ((1945 + 247)==(8676 -5027))) then v67=v67 + 1 + 0 ;else v67=v84[(779 + 1134) -(895 + 1015) ];end elseif ( not v82[v84[2]] or ((718 + 1003)>=4243)) then v67=v67 + 1 + 0 ;else v67=v84[8 -5 ];end elseif ((v85<=(315 -(91 + 195))) or ((1215 -(169 + 55))>(4408 -(6 + 65)))) then if (((5488 -2069)>=(1282 + 191)) and (v85<=(8 + 19))) then if (((4888 -(8 + 29 + 320))>(2506 -1752)) and (v85>(8 + 18))) then local v171=(1291 -(582 + 709)) -0 ;local v172;local v173;local v174;local v175;while true do if (((8773 -4206)>(1951 -1089)) and (v171==(2 -1))) then local v214=208 -((231 -145) + 122) ;while true do if (((1847 + 946)>=(5381 -2846)) and (v214==(0 -0))) then v174=nil;v175=nil;v214=3 -2 ;end if (((1986 -(1373 + 40))<(280 + 302)) and (v214==(1 -0))) then v171=2;break;end end end if (((5741 -(1322 + 521 + 11))>=(3300 -1428)) and (v171==2)) then while true do if (((4266 -(647 + 548 + 145))<=(1120 + 2509)) and (v172==1)) then v175=1139 -(566 + 573) ;for v241=v173,v84[4 + 0 ] do local v242=1235 -(205 + 1030) ;local v243;while true do if ((0==v242) or (4108==(5030 -(1432 + 502)))) then v243=0;while true do if ((v243==(1014 -((1212 -(93 + 251)) + 146))) or ((1121 + 998)>3086)) then v175=v175 + 1 ;v82[v241]=v174[v175];break;end end break;end end end break;end if ((v172==(0 + 0)) or ((3328 -(619 + 376))<(598 -(181 + 295)))) then local v236=0;local v237;while true do if (((0 + 0)==v236) or ((613 + 117)>(4697 -(34 + 109)))) then v237=0 + (1865 -(964 + 901)) ;while true do if (((2673 + (1690 -(149 + 862)))==(9606 -6254)) and ((2 -(1 -0))==v237)) then v172=1 + 0 ;break;end if (((4296 -(553 + 1189))<(2757 + 1521)) and (v237==(0 + 0))) then v173=v84[4 -2 ];v174={v82[v173](v82[v173 + (2 -1) ])};v237=1 -0 ;end end break;end end end end break;end if (((316 -220)<=(454 -(58 + 23))) and (v171==(147 -(33 + 114)))) then v172=0 + 0 ;v173=nil;v171=1225 -(1186 + 38) ;end end else local v176=0 + 0 ;local v177;local v178;local v179;local v180;local v181;local v182;while true do if (((3387 + 67)==(4503 -(61 + 988))) and (v176==(194 -(135 + 50 + 9)))) then v177=0 + 0 ;v178=nil;v176=1 + 0 ;end if ((4534>=(8909 -5212)) and (v176==(8 -6))) then v181=nil;v182=nil;v176=63 -(6 + 54) ;end if (((4236 -((1511 -(1120 + 163)) + 181))<=(6150 -(904 + 773))) and (v176==1)) then v179=nil;v180=nil;v176=1262 -(221 + 1039) ;end if (((6 -(13 -10))==v176) or (1450<=(625 + 445))) then while true do if ((v177==(46 -(35 + 9))) or ((11823 -9282)<(649 + 842))) then v182=nil;while true do if (((3 -2)==v178) or ((2757 + 482)<(5435 -(4433 -(948 + 515))))) then local v254=0;while true do if (((3232 -1210)<=3723) and (v254==1)) then v178=2;break;end if (((2480 -(4845 -3503))<1639) and (v254==(0 -0))) then v68=(v181 + v179) -(1 -0) ;v182=0;v254=(261 + 11) -(33 + (582 -344)) ;end end end if ((v178==(5 -(1397 -(823 + 571)))) or (((1391 -(559 + 216)) + 1374)>2716)) then for v259=v179,v68 do local v260=0;while true do if (((3867 -(438 + 427))<=((3 -2) + 3572)) and (v260==(0 + 0))) then v182=v182 + (1 -0) ;v82[v259]=v180[v182];break;end end end break;end if ((4357==4357) and (v178==0)) then local v255=149 -((116 -85) + 118) ;while true do if ((v255==1) or ((6859 -2352)==((4545 -(742 + 152)) -1166))) then v178=1 + 0 ;break;end if (((4999 -(818 + 532))<=(10830 -7035)) and (v255==((1991 -(752 + 541)) -(260 + 438)))) then v179=v84[2];v180,v181=v79(v82[v179](v82[v179 + (65 -((82 -(19 + 49)) + 50)) ]));v255=1 + 0 ;end end end end break;end if ((v177==(0 + 0)) or ((802 -172)>(3018 -(409 + 1057)))) then v178=0 -0 ;v179=nil;v177=4 -3 ;end if (((2781 -((440 -198) + 1496))==(1204 -(26 + 135))) and (v177==((3025 -(91 + 1900)) -(644 + 389)))) then local v238=1726 -(529 + (5858 -4661)) ;while true do if (((0 -(0 + 0))==v238) or ((2941 -(1432 + 433))>(3408 -(31 + 244 + 168)))) then v180=nil;v181=nil;v238=2 -1 ;end if ((v238==1) or ((6680 -2841)<(1645 + 1898))) then v177=1 + 1 ;break;end end end end break;end end end elseif ((v85==(13 + (1325 -(1306 + 4)))) or ((966 + 412)>(19007 -14065))) then local v183=0 -0 ;local v184;local v185;while true do if (((1821 + 287)<=2199) and (v183==(0 -0))) then v184=0 + 0 ;v185=nil;v183=2 -1 ;end if ((v183==1) or ((11208 -6574)<((6113 -(835 + 90)) -3878))) then while true do if (((1585 -(2173 -(302 + 853)))<=2078) and (v184==(146 -(8 + 138)))) then v185=v84[439 -(152 + 190 + 95) ];v82[v185]=v82[v185](v13(v82,v185 + 1 + 0 ,v84[2 + 1 ]));break;end end break;end end else v82[v84[1793 -(1316 + 475) ]]=v82[v84[6 -3 ]] -v82[v84[4]] ;end elseif (((10051 -6843)==(7260 -4052)) and (v85<=(45 -14))) then if ((v85==(29 + 1)) or ((237 + 546)>(8021 -3209))) then if ((2930<=3173) and (v82[v84[2 + 0 ]]~=v84[12 -8 ])) then v67=v67 + 1 + 0 ;else v67=v84[1964 -(783 + 1178) ];end else local v187=0;local v188;while true do if ((v187==((0 -0) + 0)) or ((7084 -4659)<=(33 + 454))) then v188=v84[435 -(210 + 223) ];v82[v188](v82[v188 + ((3293 -(1336 + 162)) -(480 + 1314)) ]);break;end end end elseif ((2807>(5753 -2973)) and (v85<=32)) then v82[v84[2]]=v84[700 -(523 + (1774 -(963 + 637))) ]~=(506 -(380 + (367 -241))) ;elseif ((v85>(1844 -(1399 + 412))) or (3213>=4876)) then v67=v84[6 -3 ];else v82[v84[(6 -4) + 0 ]][v82[v84[5 -2 ]]]=v82[v84[1652 -(1319 + 329) ]];end v67=v67 + (2 -(507 -(20 + 486))) ;break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v34[4][v67] or "?" ;error("Script error at ["   .. v92   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end;return v30(v29(),{},v17)(...);end if (v18==2) then v23=function()local v44,v45=v1(v16,v19,v19 + 2 );v19=v19 + (1055 -(176 + 877)) ;return (v45 * (369 -(98 + 15))) + v44 ;end;v24=nil;v24=function()local v46,v47,v48,v49=v1(v16,v19,v19 + (6 -3) );v19=v19 + (8 -4) ;return (v49 * (3134248 + 13642968)) + (v48 * (51840 + 13696)) + (v47 * 256) + v46 ;end;v25=nil;v18=3;end if (3==v18) then v25=function()local v50=0 -0 ;local v51;local v52;local v53;local v54;local v55;local v56;while true do if ((0 -0)==v50) then v51=v24();v52=v24();v50=3 -(2 + 0) ;end if (v50==(3 + 0)) then if (v55==(350 -(298 + 52))) then if (v54==(0 -0)) then return v56 * (733 -(40 + 693)) ;else v55=1;v53=0 + 0 ;end elseif (v55==(3897 -(675 + 1175))) then return ((v54==(0 -0)) and (v56 * (((1196 -(468 + 99)) -(411 + 217))/0))) or (v56 * NaN) ;end return v8(v56,v55-(1770 -(199 + 548)) ) * (v53 + (v54/(2^(97 -45)))) ;end if (v50==(1193 -((2488 -(1479 + 63)) + 246))) then v53=1;v54=(v21(v52,3 -2 ,524 -(48 + 440 + 16) ) * (2^(911 -(457 + 422)))) + v51 ;v50=2;end if (v50==(1 + 1)) then v55=v21(v52,41 -20 ,(801 + 938) -(445 + 1263) );v56=((v21(v52,57 -25 )==(3 -(4 -2))) and  -(1 -0)) or 1 ;v50=1842 -(1375 + 464) ;end end end;v26=nil;v26=function(v37)local v57;if  not v37 then v37=v24();if (v37==(0 + 0)) then return "";end end v57=v3(v16,v19,(v19 + v37) -(1 + 0) );v19=v19 + v37 ;local v58={};for v72=1 + 0 , #v57 do v58[v72]=v2(v1(v3(v57,v72,v72)));end return v6(v58);end;v27=v24;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v38)if (v1(v38,2)==79) then local v86=0;while true do if (v86==0) then v20=v0(v3(v38,1,1));return "";end end else local v87=v2(v0(v38,16));if v20 then local v96=v5(v87,v20);v20=nil;return v96;else return v87;end end end);v21=nil;v18=1;end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v59=1545 -(302 + 1243) ;local v60;local v61;local v62;local v63;local v64;local v65;local v66;while true do if (v59==1) then local v93=0;while true do if (0==v93) then v62=nil;v63=nil;v93=1;end if (v93==(1 + 0)) then v59=9 -7 ;break;end end end if (v59~=(5 -2)) then else v66=nil;while true do local v97=1918 -(310 + 1608) ;while true do if (v97~=(1131 -(262 + 868))) then else if (v60~=3) then else local v103=0 + 0 ;while true do if (v103~=(1313 -(414 + 898))) then else return v64;end if ((0 + 0)~=v103) then else for v118=1 -0 ,v24() do v62[v118-(1 + 0) ]=v29();end for v120=1 + 0 ,v24() do v63[v120]=v24();end v103=1 + 0 ;end end end if (v60~=(1489 -(391 + 1098))) then else local v104=0;local v105;while true do if (v104~=(0 -0)) then else v105=0 + 0 ;while true do if (v105~=(1508 -(1169 + 338))) then else v63={};v60=792 -(616 + 175) ;break;end if (v105~=(221 -(197 + 24))) then else v61={};v62={};v105=1 + 0 ;end end break;end end end break;end if ((229 -(66 + 163))~=v97) then else if (v60~=(3 -1)) then else for v108=62 -(53 + 8) ,v65 do local v109=1003 -(198 + 805) ;local v110;local v111;while true do if (v109~=(1529 -(1229 + 299))) then else if (v110==(1 -0)) then v111=v22()~=(0 + 0) ;elseif (v110==2) then v111=v25();elseif (v110==(2 + 1)) then v111=v26();end v66[v108]=v111;break;end if (v109==(1926 -(1067 + 859))) then local v123=881 -(90 + 791) ;while true do if ((1653 -(1608 + 45))==v123) then v110=v22();v111=nil;v123=1 + 0 ;end if (v123==(16 -(9 + 6))) then v109=1;break;end end end end end v64[3]=v22();for v112=1 + 0 ,v24() do local v113=0 -0 ;local v114;local v115;local v116;while true do if (v113~=(1626 -(1122 + 504))) then else v114=0;v115=nil;v113=1 + 0 ;end if ((2 -1)~=v113) then else v116=nil;while true do if (v114~=(0 -0)) then else local v126=0 -0 ;while true do if (v126~=(1235 -(17 + 1217))) then else v114=429 -(366 + 62) ;break;end if ((0 -0)==v126) then v115=0 + 0 ;v116=nil;v126=1 + 0 ;end end end if (1==v114) then while true do if (v115==(0 + 0)) then v116=v22();if (v21(v116,1139 -(636 + 502) ,1 + 0 )~=0) then else local v199=29 -(24 + 5) ;local v200;local v201;local v202;local v203;while true do if ((1328 -(770 + 556))~=v199) then else while true do if (0~=v200) then else local v244=0;while true do if (v244~=(0 + 0)) then else v201=v21(v116,1229 -(1073 + 154) ,1149 -(1089 + 57) );v202=v21(v116,10 -6 ,3 + 3 );v244=1 + 0 ;end if ((148 -(68 + 79))~=v244) then else v200=1 + 0 ;break;end end end if (v200~=(1 + 0)) then else local v245=0 -0 ;local v246;while true do if (v245==(0 -0)) then v246=0 -0 ;while true do if (v246==(1565 -(882 + 682))) then v200=2 + 0 ;break;end if ((0 + 0)~=v246) then else local v274=507 -(77 + 430) ;while true do if (v274~=(1182 -(376 + 806))) then else v203={v23(),v23(),nil,nil};if (v201==(0 + 0)) then local v278=0 -0 ;local v279;local v280;local v281;while true do if (v278==(852 -(145 + 706))) then v281=nil;while true do if (v279==(1 + 0)) then while true do if (v280~=0) then else v281=0;while true do if (v281~=0) then else v203[4 -1 ]=v23();v203[1 + 3 ]=v23();break;end end break;end end break;end if (v279~=0) then else local v288=0 + 0 ;while true do if (v288~=0) then else v280=0 + 0 ;v281=nil;v288=1;end if (v288==(2 -1)) then v279=1901 -(715 + 1185) ;break;end end end end break;end if (v278==(0 + 0)) then v279=0 -0 ;v280=nil;v278=1;end end elseif (v201==(1271 -(1191 + 79))) then v203[3]=v24();elseif (v201==(142 -(125 + 15))) then v203[1 + 2 ]=v24() -(2^(31 -15)) ;elseif (v201==(11 -8)) then local v289=1002 -(63 + 939) ;local v290;while true do if (v289~=(0 -0)) then else v290=0 -0 ;while true do if (v290~=0) then else v203[1 + 2 ]=v24() -(2^(46 -30)) ;v203[1056 -(163 + 889) ]=v23();break;end end break;end end end v274=1 + 0 ;end if (v274~=(1 + 0)) then else v246=1;break;end end end end break;end end end if (v200~=(2 + 1)) then else if (v21(v202,1 + 2 ,1960 -(1693 + 264) )~=(1 + 0)) then else v203[4]=v66[v203[1361 -(127 + 1230) ]];end v61[v112]=v203;break;end if (v200==(7 -5)) then local v248=0 + 0 ;local v249;while true do if ((1887 -(1858 + 29))~=v248) then else v249=0 -0 ;while true do if (v249~=(905 -(874 + 30))) then else v200=4 -1 ;break;end if (v249==(627 -(408 + 219))) then local v275=0 + 0 ;while true do if (v275~=(3 -2)) then else v249=1539 -(1104 + 434) ;break;end if ((1963 -(1611 + 352))==v275) then if (v21(v202,1404 -(1366 + 37) ,117 -(26 + 90) )==1) then v203[1 + 1 ]=v66[v203[1 + 1 ]];end if (v21(v202,2 + 0 ,2)~=1) then else v203[3]=v66[v203[3 + 0 ]];end v275=1745 -(877 + 867) ;end end end end break;end end end end break;end if (v199==(1638 -(643 + 995))) then v200=0 + 0 ;v201=nil;v199=1353 -(707 + 645) ;end if (v199~=1) then else v202=nil;v203=nil;v199=2 + 0 ;end end end break;end end break;end end break;end end end v60=1922 -(904 + 1015) ;end if (v60==1) then local v107=0;while true do if (v107==(296 -(200 + 95))) then v66={};v60=4 -2 ;break;end if (v107==(0 + 0)) then v64={v61,v62,nil,v63};v65=v24();v107=1 + 0 ;end end end v97=1 -0 ;end end end break;end if (v59~=0) then else local v94=0 + 0 ;while true do if (v94==(1 -0)) then v59=1 + 0 ;break;end if (v94~=(0 -0)) then else v60=930 -(928 + 2) ;v61=nil;v94=747 -(605 + 141) ;end end end if ((1 + 1)~=v59) then else local v95=0 + 0 ;while true do if (v95==(2 -1)) then v59=3 + 0 ;break;end if ((1155 -(397 + 758))==v95) then v64=nil;v65=nil;v95=2 -1 ;end end end end end;v18=5;end end end vv9(),...);end

--4/1/2023 8:17 pm
