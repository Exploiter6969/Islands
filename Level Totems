do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (2==v0) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v75=v3(v1(v29,16));if v28 then local v83=v6(v75,v28);v28=nil;return v83;else return v75;end end end);local function v30(v31,v32,v33)if v33 then local v76=(v31/((1 + 1)^(v32-((1133 + 236) -(826 + 542)))))%((518 -(309 + (1619 -(505 + 907))))^(((v33-(790 -(492 + 297))) -(v32-1)) + (2 -1))) ;return v76-(v76%1) ;else local v77=(1 + (1646 -(135 + 1510)))^(v32-(1 + (0 -0))) ;return (((v31%(v77 + v77))>=v77) and (1 -0)) or (0 -0) ;end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + (3 -1) );v27=v27 + (511 -(145 + 364)) ;return (v49 * (909 -653)) + v48 ;end local function v36()local v50,v51,v52,v53=v2(v25,v27,v27 + ((1931 -(4 + 252)) -(357 + 1315)) );v27=v27 + (277 -(115 + 158)) ;return (v53 * (27126285 -(35096656 -24747587))) + (v52 * (11233 + 54303)) + (v51 * (55 + 201)) + v50 ;end local function v37()local v54=v36();local v55=v36();local v56=1866 -((3462 -(832 + 796)) + 31) ;local v57=(v30(v55,1,53 -33 ) * ((1893 -(202 + 1689))^((85 + 1) -54))) + v54 ;local v58=v30(v55,7 + 14 ,1404 -((5525 -4192) + 40) );local v59=((v30(v55,11 + 21 )==1) and  -(1957 -(1148 + 808))) or ((91 -31) -(33 + 26)) ;if (v58==(310 -(34 + 12 + 264))) then if (v57==(1416 -((707 -560) + 1269))) then return v59 * (0 -0) ;else v58=(100 + 1315) -(35 + 1379) ;v56=(8601 -6856) -(420 + 1325) ;end elseif (v58==(252 + 1795)) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v9(v59,v58-(116 + 341 + 566) ) * (v56 + (v57/(2^(752 -(505 + 195))))) ;end local function v38(v39)local v60=(1053 -(117 + 936)) + 0 ;local v61;local v62;while true do if (v60==(1337 -(796 + 539))) then v62={};for v84=(2 + 0) -1 , #v61 do v62[v84]=v3(v2(v4(v61,v84,v84)));end v60=1377 -(435 + 939) ;end if (v60==3) then return v7(v62);end if (v60==((520 -(103 + 417)) + 0)) then v61=nil;if  not v39 then local v94=0 + 0 ;while true do if (v94==0) then v39=v36();if (v39==(0 -0)) then return "";end break;end end end v60=1 + 0 ;end if (v60==1) then v61=v4(v25,v27,(v27 + v39) -(1304 -((1757 -(616 + 1098)) + 1260)) );v27=v27 + v39 ;v60=2;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=0 -0 ;local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (0~=v63) then else v64=0 + 0 ;v65=nil;v63=1;end if (v63~=2) then else local v78=0;local v79;while true do if ((0 + 0)==v78) then v79=0;while true do if ((0 -0)~=v79) then else v68=nil;v69=nil;v79=1 + 0 ;end if (v79==1) then v63=1394 -(411 + 980) ;break;end end break;end end end if (3==v63) then v70=nil;while true do local v86=0 + 0 ;local v87;local v88;while true do if (v86~=(2 -1)) then else while true do if (v87~=0) then else v88=0;while true do if (v88==(0 -0)) then local v115=0;local v116;while true do if (v115==(0 + 0)) then v116=0;while true do if (v116==(1015 -(656 + 358))) then v88=1;break;end if (v116~=0) then else local v123=1996 -(1549 + 447) ;while true do if (v123==1) then v116=1 + 0 ;break;end if (v123==(1319 -(1025 + 294))) then if (v64==3) then local v140=0;local v141;local v142;while true do if (v140~=(1 + 0)) then else while true do if (0~=v141) then else v142=0 -0 ;while true do local v231=0;while true do if (0==v231) then if (v142==(1556 -(396 + 1159))) then return v68;end if (v142==0) then local v276=0;while true do if (v276~=(0 + 0)) then else for v289=1,v36() do v66[v289-1 ]=v42();end for v291=1148 -(876 + 271) ,v36() do v67[v291]=v36();end v276=4 -3 ;end if (v276~=1) then else v142=43 -(6 + 36) ;break;end end end break;end end end break;end end break;end if (v140==(0 -0)) then v141=0;v142=nil;v140=1;end end end if (v64~=(1399 -(917 + 481))) then else local v143=1803 -(1037 + 766) ;local v144;while true do if (v143==(0 -0)) then v144=1126 -(492 + 634) ;while true do if ((0 + 0)==v144) then local v230=0;while true do if (v230==(810 -(67 + 742))) then v144=1;break;end if (v230~=0) then else v68={v65,v66,nil,v67};v69=v36();v230=1 + 0 ;end end end if (v144==(1 + 0)) then v70={};v64=1739 -(171 + 1566) ;break;end end break;end end end v123=1;end end end end break;end end end if (v88~=(1 + 0)) then else if (v64~=0) then else local v117=616 -(221 + 395) ;local v118;while true do if (v117~=(0 + 0)) then else v118=0;while true do if (v118~=1) then else v67={};v64=1;break;end if (v118==(0 -0)) then local v133=0 -0 ;while true do if (v133==(1 + 0)) then v118=281 -(209 + 71) ;break;end if (v133~=(0 + 0)) then else v65={};v66={};v133=1;end end end end break;end end end if (v64~=2) then else local v119=1232 -(435 + 797) ;while true do if (v119~=0) then else for v124=170 -(149 + 20) ,v69 do local v125=0;local v126;local v127;local v128;while true do if (v125==0) then v126=0;v127=nil;v125=1;end if (v125==(1 + 0)) then v128=nil;while true do if (v126==(0 -0)) then local v145=0;while true do if (v145==(1 + 0)) then v126=1;break;end if (v145==(0 + 0)) then v127=v34();v128=nil;v145=1 -0 ;end end end if (v126==(4 -3)) then if (v127==(2 -1)) then v128=v34()~=(0 + 0) ;elseif (v127==2) then v128=v37();elseif (v127~=3) then else v128=v38();end v70[v124]=v128;break;end end break;end end end v68[7 -4 ]=v34();v119=1;end if (1==v119) then for v129=1,v36() do local v130=0;local v131;local v132;while true do if (v130==1) then while true do if (v131==(0 + 0)) then v132=v34();if (v30(v132,959 -(263 + 695) ,1 + 0 )~=0) then else local v212=0;local v213;local v214;local v215;local v216;local v217;while true do if (v212==(1 + 0)) then v215=nil;v216=nil;v212=1 + 1 ;end if (v212~=(9 -7)) then else v217=nil;while true do if ((1 -0)~=v213) then else local v248=0;while true do if (v248==0) then v216=nil;v217=nil;v248=1 + 0 ;end if (v248==(921 -(795 + 125))) then v213=2;break;end end end if (v213==(0 + 0)) then local v249=0;while true do if (v249==(808 -(71 + 736))) then v213=1;break;end if (v249~=(0 -0)) then else v214=0;v215=nil;v249=1 -0 ;end end end if (v213==(7 -5)) then while true do if (3~=v214) then else if (v30(v216,3 + 0 ,934 -(834 + 97) )~=(4 -3)) then else v217[3 + 1 ]=v70[v217[7 -3 ]];end v65[v129]=v217;break;end if (v214~=(2 + 0)) then else local v278=586 -(567 + 19) ;while true do if (v278==(0 -0)) then if (v30(v216,1,1 + 0 )~=1) then else v217[2]=v70[v217[2 + 0 ]];end if (v30(v216,321 -(198 + 121) ,899 -(329 + 568) )==1) then v217[3]=v70[v217[3]];end v278=1146 -(425 + 720) ;end if (v278==1) then v214=3 + 0 ;break;end end end if (v214==1) then local v279=0 -0 ;local v280;while true do if (0==v279) then v280=0 -0 ;while true do if ((0 -0)==v280) then v217={v35(),v35(),nil,nil};if (v215==0) then local v301=0 + 0 ;local v302;while true do if (v301~=(0 + 0)) then else v302=0;while true do if (0~=v302) then else v217[4 -1 ]=v35();v217[1056 -(513 + 539) ]=v35();break;end end break;end end elseif (v215==1) then v217[906 -(497 + 406) ]=v36();elseif (v215==(854 -(701 + 151))) then v217[3]=v36() -(2^(8 + 8)) ;elseif (v215==(385 -(146 + 236))) then local v309=1850 -(1225 + 625) ;local v310;while true do if (v309==(681 -(669 + 12))) then v310=0 -0 ;while true do if (v310~=0) then else v217[1532 -(539 + 990) ]=v36() -((2 + 0)^(15 + 1)) ;v217[4]=v35();break;end end break;end end end v280=4 -3 ;end if (v280~=(1099 -(194 + 904))) then else v214=2;break;end end break;end end end if (v214==(0 + 0)) then local v281=0 + 0 ;while true do if (v281==(0 + 0)) then local v286=0 -0 ;while true do if (v286==1) then v281=1;break;end if (v286==(0 + 0)) then v215=v30(v132,2,3);v216=v30(v132,177 -(50 + 123) ,5 + 1 );v286=1;end end end if (1==v281) then v214=1;break;end end end end break;end end break;end if ((0 + 0)==v212) then v213=363 -(219 + 144) ;v214=nil;v212=1;end end end break;end end break;end if ((0 -0)==v130) then local v136=0;while true do if (v136==(3 -2)) then v130=1;break;end if (v136==(0 + 0)) then v131=0;v132=nil;v136=1;end end end end end v64=10 -7 ;break;end end end break;end end break;end end break;end if ((0 -0)==v86) then v87=0;v88=nil;v86=1;end end end break;end if (v63~=(3 -2)) then else v66=nil;v67=nil;v63=2;end end end local function v43(v44,v45,v46)local v71=0;local v72;local v73;local v74;while true do if (v71==0) then v72=v44[1];v73=v44[2];v71=1;end if (v71==1) then v74=v44[3];return function(...)local v89=1;local v90= -1;local v91={...};local v92=v13("#",...) -1 ;local function v93()local v95=v72;local v96=v73;local v97=v74;local v98=v41;local v99={};local v100={};local v101={};for v105=0 + 0 ,v92 do if ((v105>=v97) or ((4931 -1742)<=(865 -560))) then v99[v105-v97 ]=v91[v105 + (837 -(672 + 164)) ];else v101[v105]=v91[v105 + (1106 -(77 + 1028)) ];end end local v102=(v92-v97) + (1 -0) ;local v103;local v104;while true do local v106=476 -(272 + 204) ;local v107;local v108;while true do if ((((2307 -(882 + 105)) -(239 + 168))<=((3315 -(140 + 486)) + 1835)) and (v106==(1 + 0))) then while true do if ((((1721 -(400 + 361)) -(554 + 241))<=((5969 -(443 + 574)) -(96 + 20))) and (v107==0)) then v108=0 + 0 ;while true do if ((4979>((31048 -20244) -7860)) and (v108==(4 -(1068 -(559 + 506))))) then if ((v104<=(877 -(733 + 132))) or (451>=(2077 -(85 + 15)))) then if ((v104<=5) or ((16456 -(273 + 11373))<(1997 -(1604 + 15)))) then if ((v104<=(3 -1)) or ((5708 -(562 + 598))<(2831 -1975))) then if (((430 + 445 + 1524)==((4916 -3229) + 712)) and (v104<=0)) then local v137=0 -0 ;local v138;local v139;while true do if (((3271 -(1183 + 771))<(2813 -(429 + 903))) and (v137==(450 -(129 + (1405 -1084))))) then v138=v103[1 + 1 + 0 ];v139=v101[v103[70 -(27 + 40) ]];v137=1 -0 ;end if ((3209>(2537 -(77 + 108))) and (v137==((639 + 213) -(32 + 819)))) then v101[v138 + (1 -0) ]=v139;v101[v138]=v139[v103[16 -12 ]];break;end end elseif ((v104>(3 -2)) or ((1119 -(9 + 138 + 516))>4868)) then local v147=851 -(394 + 457) ;local v148;local v149;local v150;local v151;local v152;while true do if (((5234 -1464)==((2543 + 1334) -(87 + 20))) and (v147==((316 -(244 + 71)) -0))) then v150=nil;v151=nil;v147=5 -3 ;end if ((v147==((2053 -(31 + 752)) -(289 + 979))) or (3095>=(11027 -6063))) then v152=nil;while true do if ((3809>=(9855 -6074)) and (v148==(1 + 1))) then while true do if ((v149==1) or ((2115 -(721 + 631))==(7902 -4704))) then v152=0;for v258=v150,v103[7 -3 ] do local v259=(42 -(23 + 19)) + 0 ;while true do if ((v259==(612 -(349 + 263))) or ((1682 -(43 + 23))<=(955 + 457))) then v152=v152 + ((3 + 0) -2) ;v101[v258]=v151[v152];break;end end end break;end if ((3702>(1139 + 764)) and ((1735 -((2194 -(503 + 1384)) + 1428))==v149)) then local v252=0 -0 ;local v253;while true do if ((v252==(820 -(718 + 102))) or ((1270 -(977 + 2))>=(732 + 934))) then v253=0 + 0 ;while true do if (((4406 -(212 + 58))>(179 + (1477 -843))) and ((1 + 0)==v253)) then v149=2 -1 ;break;end if ((v253==(0 + 0)) or ((284 + 87)>(11348 -8182))) then local v293=1794 -(1100 + 694) ;while true do if (((336 + 686)>84) and (v293==(2 -(2 -1)))) then v253=1;break;end if (((4840 -(754 + 1063))==(4036 -(367 + 646))) and ((778 -(222 + 556))==v293)) then v150=v103[2];v151={v101[v150](v14(v101,v150 + (486 -(153 + 332)) ,v90))};v293=(2926 -(846 + 349)) -(592 + 1138) ;end end end end break;end end end end break;end if ((v148==0) or ((12166 -8778)<(4817 -3082))) then local v232=0 -0 ;while true do if (((1793 -(795 + 549))<3625) and (v232==(0 -0))) then v149=0;v150=nil;v232=1;end if ((v232==((1884 -(824 + 1057)) -2)) or ((153 -44)>(517 + 4378))) then v148=1 + 0 ;break;end end end if (((4104 -((18 -14) + 1069))==(183 + 2848)) and (v148==1)) then local v233=0;while true do if (((3262 -(325 + (1196 -(550 + 462))))<((11194 -6094) -1729)) and (v233==(1505 -(263 + 1241)))) then v148=1 + 1 ;break;end if ((3216>=(4886 -3255)) and (((935 + 708) -(475 + 1168))==v233)) then v151=nil;v152=nil;v233=2 -1 ;end end end end break;end if ((v147==(0 + 0)) or ((8210 -5676)>(1709 + 1263))) then v148=0 -0 ;v149=nil;v147=1 + 0 ;end end else v89=v103[(2 + 1) -0 ];end elseif ((v104<=(3 -0)) or ((366 + 1578)<(1657 -(827 + 245)))) then if ((v101[v103[2]]==v103[4]) or ((1032 + 945)<=(2159 -(55 + 1331)))) then v89=v89 + (927 -(319 + 607)) ;else v89=v103[29 -(24 + 2) ];end elseif (((1250 + 894)==(3499 -(137 + 1218))) and (v104==(4 + 0))) then local v155=0 -0 ;local v156;local v157;local v158;local v159;while true do if (((4359 -(150 + 337))>=(2039 -1462)) and (v155==(1 + 0))) then v158=nil;v159=nil;v155=12 -(5 + 5) ;end if ((2913>=(767 -365)) and (v155==(0 -0))) then v156=0 -0 ;v157=nil;v155=1;end if (((9361 -4980)>(1240 -934)) and (v155==(1 + 1))) then while true do if ((v156==(1664 -(713 + 950))) or ((2610 -(963 + 268))>=(1731 + 422))) then v159=v101[v157 + (1445 -(371 + 1072)) ];if (((5664 -3966)<(12773 -9487)) and (v159>(1107 -(913 + (442 -248))))) then if (((199 -54)<=202) and (v158>v101[v157 + 1 ])) then v89=v103[11 -8 ];else v101[v157 + (4 -1) ]=v158;end elseif (((15678 -11465)==(2504 + 1060 + 649)) and (v158<v101[v157 + 1 + 0 ])) then v89=v103[5 -2 ];else v101[v157 + (606 -(431 + 172)) ]=v158;end break;end if (((0 -0)==v156) or ((6784 -(823 + 85 + 1001))<=(887 -335))) then v157=v103[107 -(100 + 5) ];v158=v101[v157];v156=199 -(121 + 77) ;end end break;end end else local v160=0;local v161;local v162;local v163;local v164;while true do if (((3879 -1243)>=(2769 -((1216 -878) + 101))) and (v160==(4 -2))) then while true do if ((v161==(0 + 0)) or ((5075 -(1313 + 223))<1347)) then v162=v103[724 -(303 + 419) ];v163=v101[v162 + 2 ];v161=1 + 0 ;end if (((1615 -(1042 + 200))<(220 + 1756)) and (v161==(2 -1))) then local v239=0 + 0 ;while true do if (((2872 -(1501 + 269))>=(38 + 395)) and (v239==(1 + 0))) then v161=2 + 0 ;break;end if (((2994 -((1035 -576) + 521))==((955 -(72 + 39)) + 1170)) and (0==v239)) then v164=v101[v162] + v163 ;v101[v162]=v164;v239=1 + (0 -0) ;end end end if (((1788 + 149)>(3433 -2180)) and (v161==2)) then if (((624 + 2153)>=(1735 + 74)) and (v163>0)) then if ((v164<=v101[v162 + 1 ]) or ((164 + 1839)>=(3772 + 941))) then local v264=0;local v265;while true do if ((v264==0) or ((2251 -(416 + 800))>=(1761 -(299 + 224)))) then v265=1367 -(118 + 1249) ;while true do if ((v265==(126 -(1 + 55 + 70))) or ((1300 -(25 + 39))<(775 -560))) then v89=v103[1 + 0 + (511 -(360 + 149)) ];v101[v162 + 3 + 0 ]=v164;break;end end break;end end end elseif ((v164>=v101[v162 + 1 + 0 ]) or ((4607 -1651)>(1801 + 1205))) then local v266=0 + 0 ;local v267;local v268;while true do if ((((2199 + 2063) -(227 + 1078))<=(4205 + 334)) and (v266==(1961 -(42 + 1919)))) then v267=0 + (1244 -(352 + 892)) ;v268=nil;v266=2 -1 ;end if (((686 + (5054 -(14 + 805)))>=3138) and (v266==(1 + 0))) then while true do if (((10837 -7814)<(2834 + 966)) and (v267==0)) then v268=0 + 0 ;while true do if (((3946 -(105 + 124))>=(230 + 522)) and (v268==(0 -0))) then v89=v103[3];v101[v162 + 2 + 1 ]=v164;break;end end break;end end break;end end end break;end end break;end if (((0 -0)==v160) or ((3476 -(58 + 148))<((831 -530) + 2285))) then v161=0 + 0 ;v162=nil;v160=1 -0 ;end if ((v160==((952 -(634 + 317)) + 0)) or ((4789 -1189)>=(12046 -7528))) then v163=nil;v164=nil;v160=2 + 0 ;end end end elseif ((v104<=(12 -4)) or ((1270 + 810)<((1635 -(1386 + 168)) -(6 + 4)))) then if (((3764 -(2910 -873))<(8979 -4009)) and (v104<=(2 + 4))) then if ((v103[2 + 0 ]==v101[v103[10 -6 ]]) or (816>=(3329 -(27 + 24 + 1155)))) then v89=v89 + 1 ;else v89=v103[1972 -(971 + 762 + 236) ];end elseif (((2204 -1276)<=(1252 + 766)) and (v104==7)) then v101[v103[2 + 0 ]]=v101[v103[8 -5 ]];elseif ((1578<=1815) and (v101[v103[734 -(378 + 354) ]]~=v101[v103[4]])) then v89=v89 + 1 ;else v89=v103[9 -6 ];end elseif ((v104<=10) or ((5922 -3640)<(5874 -3901))) then if ((v104==9) or (2780==(4529 -1590))) then v101[v103[2]]={};elseif (v101[v103[2 + 0 ]] or ((10618 -5841)<2219)) then v89=v89 + (3 -2) ;else v89=v103[8 -5 ];end elseif (((4258 + 475)>=(564 + 750)) and (v104>(1471 -(321 + 1139)))) then v101[v103[5 -3 ]]=v101[v103[3]][v103[199 -(96 + 99) ]];else local v171=1916 -(1023 + 893) ;local v172;local v173;local v174;while true do if (((5310 -(1400 + 71))>=(3358 -2252)) and (v171==(1 + 0))) then v174=(0 -0) -0 ;for v224=v172,v103[1 + 3 ] do local v225=0 + 0 ;local v226;while true do if ((4838==(3490 + 1348)) and (v225==(188 -(111 + 77)))) then v226=0;while true do if ((v226==0) or ((6198 -4607)==(5 + 158))) then v174=v174 + 1 ;v101[v224]=v173[v174];break;end end break;end end end break;end if (((1155 + (4167 -3248))>(3018 -2178)) and (v171==(0 -0))) then local v221=0 + 0 ;while true do if ((v221==0) or ((4429 -(149 + 282))<=(1054 + 2012))) then v172=v103[2 -0 ];v173={v101[v172](v101[v172 + (1 -0) ])};v221=4 -3 ;end if (((5345 -(504 + 168))>=3381) and ((2 -1)==v221)) then v171=327 -(25 + 17 + 284) ;break;end end end end end elseif ((v104<=19) or (2338<(1590 + 85))) then if (((12680 -8830)>=(1901 -(88 + 104))) and (v104<=15)) then if ((v104<=(1026 -((368 -163) + 808))) or ((788 + 260 + 123 + 578)<=951)) then if (((1084 -(123 + 251))<(9541 -6219)) and (v101[v103[2 + (1204 -(256 + 948)) ]]==v101[v103[430 -(60 + 366) ]])) then v89=v89 + 1 + 0 ;else v89=v103[(3 + 2) -2 ];end elseif ((v104==((1634 -(1173 + 453)) + 6)) or ((5147 -(6 + 216))<(5323 -2833))) then v101[v103[4 -2 ]][v103[3]]=v103[1 + 3 ];else v101[v103[2 + 0 ]]=v46[v103[8 -5 ]];end elseif (((3796 + 377 + 674)>=(2319 + 1178)) and (v104<=(6 + 11))) then if (((2321 + 2546)>=2590) and (v104==(1 + 15))) then for v210=v103[2 + 0 ],v103[9 -6 ] do v101[v210]=nil;end else local v180=0;local v181;local v182;while true do if (((4409 -2780)<(2365 + 732)) and (v180==(1945 -(1143 + 802)))) then v181=75 -(35 + 40) ;v182=nil;v180=3 -(3 -1) ;end if (((9846 -7687)>(597 + 569)) and (v180==1)) then while true do if (((11643 -(4563 + 3482))==3598) and (v181==(0 + 0))) then v182=v103[2];v101[v182]=v101[v182](v14(v101,v182 + 1 ,v103[5 -2 ]));break;end end break;end end end elseif ((v104==(60 -42)) or (((1633 -1060) + 673)<(499 -(211 + 24)))) then local v183=0 + 0 + 0 ;local v184;local v185;while true do if (((4470 -2544)<4530) and ((0 + 0)==v183)) then v184=0 -(0 -0) ;v185=nil;v183=298 -(274 + 23) ;end if ((v183==(1713 -((1235 -(266 + 948)) + 1691))) or ((3629 -(10 + 66))<=(9162 -5628))) then while true do if ((v184==(1386 -(79 + 1307))) or ((433 + 3080)<(235 + 19))) then v185=v103[2];v101[v185](v14(v101,v185 + 1 ,v103[1 + 2 ]));break;end end break;end end elseif ((v101[v103[2 + 0 ]]<v101[v103[4]]) or ((4622 -(554 + 488))==3329)) then v89=v89 + 1 + 0 ;else v89=v103[3 + 0 ];end elseif ((v104<=(1461 -(853 + 586))) or (4430<338)) then if ((v104<=(5 + 15)) or ((6666 -(1317 + 635))<(110 + (5088 -2662)))) then if (((511 + 246)<4916) and  not v101[v103[241 -(95 + 144) ]]) then v89=v89 + 1 + 0 ;else v89=v103[7 -4 ];end elseif (((1254 -751)<(3021 -(1193 + 191))) and (v104>21)) then local v187=0 + 0 ;local v188;local v189;local v190;local v191;while true do if (((6905 -4246)<3448) and ((2 -1)==v187)) then local v222=0;while true do if (((1829 -(436 + 751))<(5645 -3838)) and (v222==(2 -1))) then v187=2;break;end if (((2841 + 1544)<(15035 -10498)) and (((751 -(250 + 38)) -(257 + 206))==v222)) then v90=(v190 + v188) -1 ;v191=0 + 0 ;v222=1404 -(25 + (3263 -(1177 + 708))) ;end end end if (((2541 + 2296)>(4051 -((2398 -(1225 + 303)) + 885))) and (2==v187)) then for v227=v188,v90 do local v228=152 -(130 + 22) ;local v229;while true do if (((4184 -1530)<(5600 -(189 + 559 + (1148 -860)))) and (v228==0)) then v229=1405 -(1053 + (853 -501)) ;while true do if (((6180 -(161 + 90 + 1242))>(21 + 8)) and (v229==(0 + 0))) then v191=v191 + (1184 -(667 + 516)) ;v101[v227]=v189[v191];break;end end break;end end end break;end if (((0 + 0)==v187) or ((4444 -(1356 + 252))==(1461 -742))) then local v223=1246 -(581 + 665) ;while true do if ((1817==(1037 + 780)) and (v223==(0 -0))) then v188=v103[4 -2 ];v189,v190=v98(v101[v188](v101[v188 + (4 -3) ]));v223=1 -(0 + 0) ;end if (((1 -0)==v223) or ((200 -115)>=(3184 + 20))) then v187=1 + 0 ;break;end end end end else v101[v103[3 -1 ]]=v101[v103[712 -(346 + 363) ]] -v103[4] ;end elseif ((v104<=(10 + 14)) or ((171 + 494)>(3401 + 1045))) then if ((v104==(59 -(61 -25))) or ((189 + 0)>(9111 -5335))) then local v193=1758 -((522 -291) + 1527) ;local v194;local v195;while true do if (((4617 -2066)>=2090) and (v193==(1 + 0))) then while true do if (((859 -(329 + 374))<(5241 -(377 + 183))) and ((0 + 0 + 0)==v194)) then v195=v103[2];v101[v195](v101[v195 + 1 ]);break;end end break;end if ((v193==(1141 -(784 + 357))) or ((3274 + 1612)<(1226 -740))) then v194=0 -(0 + 0) ;v195=nil;v193=1 -0 ;end end else v101[v103[(1863 -(49 + 1812)) -(0 + 0) ]]=v103[884 -(729 + 152) ];end elseif (((1064 + 2553)<=((9635 -7097) + 2417)) and (v104==(707 -(390 + 292)))) then local v198=(2718 -1086) -(1518 + 114) ;local v199;local v200;local v201;local v202;local v203;local v204;while true do if (((93 -(58 + 35))==v198) or ((6705 -(1153 + 727))<=888)) then v199=0;v200=nil;v198=2 -1 ;end if (((1693 -(12 + 1195 + 156))<((5448 -3504) -(225 + 183))) and (v198==(3 + 0 + 0))) then while true do if ((v199==(2 + 1)) or (3229<883)) then if ((368<(1478 -(652 + 85))) and v204) then local v250=1481 -((1607 -(690 + 765)) + 1329) ;local v251;while true do if ((v250==((0 -0) + 0)) or ((3543 -(478 + 255))<=((3006 -835) + (619 -(161 + 288))))) then v251=0 -0 ;while true do if (((1742 -(92 + 263))==(2755 -(840 + 528))) and (v251==(0 + 0))) then v101[v202]=v204;v89=v103[1312 -(824 + 485) ];break;end end break;end end else v89=v89 + 1 ;end break;end if ((538<=(5500 -(1276 + 686))) and (v199==(1 + 0))) then v202=v200 + 1 + 1 ;v203={v101[v200](v101[v200 + ((1 + 0) -0) ],v101[v202])};v199=6 -4 ;end if (((4580 -(176 + 495))>=618) and (v199==(4 -2))) then local v246=104 -(98 + 6) ;while true do if ((v246==(0 + 0)) or (2120>(10596 -8068))) then for v273=(2266 -1581) -(207 + 477) ,v201 do v101[v202 + v273 ]=v203[v273];end v204=v203[1 + 0 ];v246=1;end if (((8590 -5645)<=2972) and (1==v246)) then v199=(1 + 5) -3 ;break;end end end if ((4115>=(4394 -(195 + 1374))) and (v199==(0 -0))) then local v247=253 -(215 + 38) ;while true do if ((1268<2105) and (v247==0)) then v200=v103[2];v201=v103[1644 -(1603 + 37) ];v247=(2 -1) + 0 ;end if ((547<(22675 -17914)) and (v247==(1584 -(500 + 1083)))) then v199=1 -0 ;break;end end end end break;end if ((v198==1) or ((2873 -1126)>3228)) then v201=nil;v202=nil;v198=938 -(409 + 527) ;end if ((v198==(4 -(859 -(362 + 495)))) or (1534<=(1180 -801))) then v203=nil;v204=nil;v198=3;end end else do return;end end v89=v89 + (2 -1) ;break;end if ((v108==(0 -0)) or ((2560 -(221 + 495))>=(1229 + 1944))) then local v120=0 -(779 -(121 + 658)) ;while true do if ((((756 + 56) -(565 + 246))==v120) or ((8048 -4044)>(6335 -(1226 + 260)))) then v108=1958 -(1712 + 245) ;break;end if ((v120==(1635 -(801 + 834))) or (2916<=(1174 -(82 + 658)))) then local v122=0 -(1292 -(352 + 940)) ;while true do if (((5125 -(43 + 237))>702) and (((1165 -266) -(400 + 499))==v122)) then v103=v95[v89];v104=v103[(1145 -(783 + 358)) -(2 + 1) ];v122=1 + 0 ;end if (((4611 -(363 + 735))>=(1573 -(811 + 335))) and (v122==(118 -(49 + 68)))) then v120=1 + 0 ;break;end end end end end end break;end end break;end if (((3272 -1965)>(1553 -848)) and (0==v106)) then v107=0 -0 ;v108=nil;v106=2 -1 ;end end end end A,B=v41(v12(v93));if  not A[1] then local v109=0;local v110;while true do if (v109==0) then v110=v44[4][v89] or "?" ;error("Script error at ["   .. v110   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end end;end end end return v43(v42(),{},v26)(...);end;vv10(),...);break;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end end end
--4/7/23 14:41 EST
